[10/30 23:32:42] detectron2 INFO: Rank of current process: 1. World size: 2
[10/30 23:35:25] detectron2 INFO: Rank of current process: 1. World size: 2
[10/30 23:37:36] detectron2 INFO: Rank of current process: 1. World size: 2
[10/30 23:38:02] detectron2 INFO: Rank of current process: 1. World size: 2
[10/31 00:06:46] detectron2 INFO: Rank of current process: 1. World size: 2
[10/31 00:10:52] detectron2 INFO: Rank of current process: 1. World size: 2
[10/31 00:23:40] detectron2 INFO: Rank of current process: 1. World size: 2
[10/31 00:55:00] detectron2 INFO: Rank of current process: 1. World size: 2
[10/31 01:02:30] detectron2 INFO: Rank of current process: 1. World size: 2
[10/31 01:02:31] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.3 (default, May 19 2020, 18:47:26) [GCC 7.3.0]
numpy                   1.19.1
detectron2              0.2.1 @/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 5.4
CUDA compiler           not available
detectron2 arch flags   /cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/_C.cpython-38-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.6.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /opt/common/cuda/cuda-10.0.130/lib64/
Pillow                  7.2.0
torchvision             0.7.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision
torchvision arch flags  /cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20201030
cv2                     4.4.0
----------------------  --------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[10/31 01:02:31] detectron2 INFO: Command line arguments: Namespace(config_file='configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml', dist_url='tcp://127.0.0.1:63010', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.MASK_ON', 'True', 'SOLVER.BASE_LR', '0.015', 'OUTPUT_DIR', 'temp'], resume=False)
[10/31 01:02:31] detectron2 INFO: Contents of args.config_file=configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml:
_BASE_: "../Base-RCNN-FPN.yaml"
MODEL:
  WEIGHTS: "https://download.pytorch.org/models/resnet18-5c106cde.pth"
  MASK_ON: True
  RESNETS:
    DEPTH: 18
    RES2_OUT_CHANNELS: 64
SOLVER:
  BASE_LR: 0.02
  CHECKPOINT_PERIOD: 7330
  # IMS_PER_BATCH: 24
  # STEPS: (40000, 53500)
  # MAX_ITER: 60000
  # WARMUP_FACTOR: 5e-4
  # WARMUP_ITERS: 2000
#OUTPUT_DIR: output/mask_r18_fpn
OUTPUT_DIR: "temp/"

[10/31 01:02:31] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32], [64], [128], [256], [512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 18
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 64
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: 
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://download.pytorch.org/models/resnet18-5c106cde.pth
OUTPUT_DIR: temp
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.015
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 7330
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[10/31 01:02:31] detectron2.utils.env INFO: Using a generated random seed 31107827
[10/31 01:02:31] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten()
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[10/31 01:02:53] detectron2.data.datasets.coco INFO: Loading datasets/coco/annotations/instances_train2017.json takes 21.42 seconds.
[10/31 01:02:54] detectron2.data.datasets.coco INFO: Loaded 118287 images in COCO format from datasets/coco/annotations/instances_train2017.json
[10/31 01:03:01] detectron2.data.build INFO: Removed 1021 images with no usable annotations. 117266 images left.
[10/31 01:03:06] detectron2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 257253       |   bicycle    | 7056         |      car      | 43533        |
|  motorcycle   | 8654         |   airplane   | 5129         |      bus      | 6061         |
|     train     | 4570         |    truck     | 9970         |     boat      | 10576        |
| traffic light | 12842        | fire hydrant | 1865         |   stop sign   | 1983         |
| parking meter | 1283         |    bench     | 9820         |     bird      | 10542        |
|      cat      | 4766         |     dog      | 5500         |     horse     | 6567         |
|     sheep     | 9223         |     cow      | 8014         |   elephant    | 5484         |
|     bear      | 1294         |    zebra     | 5269         |    giraffe    | 5128         |
|   backpack    | 8714         |   umbrella   | 11265        |    handbag    | 12342        |
|      tie      | 6448         |   suitcase   | 6112         |    frisbee    | 2681         |
|     skis      | 6623         |  snowboard   | 2681         |  sports ball  | 6299         |
|     kite      | 8802         | baseball bat | 3273         | baseball gl.. | 3747         |
|  skateboard   | 5536         |  surfboard   | 6095         | tennis racket | 4807         |
|    bottle     | 24070        |  wine glass  | 7839         |      cup      | 20574        |
|     fork      | 5474         |    knife     | 7760         |     spoon     | 6159         |
|     bowl      | 14323        |    banana    | 9195         |     apple     | 5776         |
|   sandwich    | 4356         |    orange    | 6302         |   broccoli    | 7261         |
|    carrot     | 7758         |   hot dog    | 2884         |     pizza     | 5807         |
|     donut     | 7005         |     cake     | 6296         |     chair     | 38073        |
|     couch     | 5779         | potted plant | 8631         |      bed      | 4192         |
| dining table  | 15695        |    toilet    | 4149         |      tv       | 5803         |
|    laptop     | 4960         |    mouse     | 2261         |    remote     | 5700         |
|   keyboard    | 2854         |  cell phone  | 6422         |   microwave   | 1672         |
|     oven      | 3334         |   toaster    | 225          |     sink      | 5609         |
| refrigerator  | 2634         |     book     | 24077        |     clock     | 6320         |
|     vase      | 6577         |   scissors   | 1464         |  teddy bear   | 4729         |
|  hair drier   | 198          |  toothbrush  | 1945         |               |              |
|     total     | 849949       |              |              |               |              |[0m
[10/31 01:03:06] detectron2.data.common INFO: Serializing 117266 elements to byte tensors and concatenating them all ...
[10/31 01:03:10] detectron2.data.common INFO: Serialized dataset takes 451.21 MiB
[10/31 01:03:10] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[10/31 01:03:10] detectron2.data.build INFO: Using training sampler TrainingSampler
[10/31 01:03:13] fvcore.common.checkpoint INFO: Loading checkpoint from https://download.pytorch.org/models/resnet18-5c106cde.pth
[10/31 01:03:13] fvcore.common.download INFO: Downloading from https://download.pytorch.org/models/resnet18-5c106cde.pth ...
[10/31 01:03:24] fvcore.common.download INFO: Successfully downloaded /cfarhomes/shishira/.torch/fvcore_cache/models/resnet18-5c106cde.pth. 46827520 bytes.
[10/31 01:03:24] fvcore.common.file_io INFO: URL https://download.pytorch.org/models/resnet18-5c106cde.pth cached in /cfarhomes/shishira/.torch/fvcore_cache/models/resnet18-5c106cde.pth
[10/31 01:03:24] fvcore.common.checkpoint INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mbackbone.bottom_up.res2.0.conv2.weight[0m
  [34mbackbone.bottom_up.res4.0.conv2.weight[0m
  [34mproposal_generator.rpn_head.conv.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv2.weight[0m
  [34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.fpn_output4.{weight, bias}[0m
  [34mroi_heads.box_head.fc2.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv2.weight[0m
  [34mroi_heads.mask_head.mask_fcn1.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv2.norm.{bias, weight}[0m
  [34mroi_heads.mask_head.predictor.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.shortcut.weight[0m
  [34mbackbone.bottom_up.stem.conv1.norm.{weight, bias}[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{4, 1, 3, 2, 0}[0m
  [34mbackbone.bottom_up.res4.0.shortcut.norm.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn4.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.weight[0m
  [34mroi_heads.mask_head.mask_fcn3.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.fpn_output2.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv2.norm.{bias, weight}[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv2.norm.{weight, bias}[0m
  [34mroi_heads.mask_head.deconv.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv1.weight[0m
  [34mbackbone.bottom_up.res4.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.fpn_lateral2.{bias, weight}[0m
  [34mbackbone.fpn_lateral4.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.fpn_output3.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv2.weight[0m
  [34mbackbone.bottom_up.res3.0.conv2.weight[0m
  [34mbackbone.bottom_up.res4.1.conv2.weight[0m
  [34mbackbone.bottom_up.res5.1.conv1.weight[0m
  [34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
  [34mbackbone.fpn_lateral3.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.norm.{weight, bias}[0m
  [34mroi_heads.box_head.fc1.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv1.weight[0m
  [34mbackbone.bottom_up.res4.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.norm.{bias, weight}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv1.weight[0m
  [34mbackbone.fpn_output5.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv1.weight[0m
  [34mbackbone.bottom_up.res2.1.conv2.weight[0m
  [34mbackbone.bottom_up.res4.1.conv1.weight[0m
  [34mbackbone.bottom_up.res2.0.conv1.weight[0m
  [34mbackbone.fpn_lateral5.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res4.1.conv1.norm.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn2.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv1.weight[0m
  [34mbackbone.bottom_up.stem.conv1.weight[0m
[10/31 01:03:24] fvcore.common.checkpoint INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mconv1.weight[0m
  [35mbn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv1.weight[0m
  [35mlayer1.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv2.weight[0m
  [35mlayer1.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv1.weight[0m
  [35mlayer1.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv2.weight[0m
  [35mlayer1.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv1.weight[0m
  [35mlayer2.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv2.weight[0m
  [35mlayer2.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.downsample.0.weight[0m
  [35mlayer2.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv1.weight[0m
  [35mlayer2.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv2.weight[0m
  [35mlayer2.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv1.weight[0m
  [35mlayer3.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv2.weight[0m
  [35mlayer3.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.downsample.0.weight[0m
  [35mlayer3.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv1.weight[0m
  [35mlayer3.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv2.weight[0m
  [35mlayer3.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv1.weight[0m
  [35mlayer4.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv2.weight[0m
  [35mlayer4.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.downsample.0.weight[0m
  [35mlayer4.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv1.weight[0m
  [35mlayer4.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv2.weight[0m
  [35mlayer4.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mfc.{weight, bias}[0m
[10/31 01:03:24] detectron2.engine.train_loop INFO: Starting training from iteration 0
[10/31 01:06:43] detectron2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 134, in train
    self.run_step()
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 423, in run_step
    self._trainer.run_step()
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 228, in run_step
    loss_dict = self.model(data)
  File "/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 511, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/modeling/meta_arch/rcnn.py", line 160, in forward
    proposals, proposal_losses = self.proposal_generator(images, features, gt_instances)
  File "/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/modeling/proposal_generator/rpn.py", line 448, in forward
    proposals = self.predict_proposals(
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/modeling/proposal_generator/rpn.py", line 474, in predict_proposals
    return find_top_rpn_proposals(
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/modeling/proposal_generator/proposal_utils.py", line 91, in find_top_rpn_proposals
    raise FloatingPointError(
FloatingPointError: Predicted boxes or scores contain Inf/NaN. Training has diverged.
[10/31 01:06:43] detectron2.engine.hooks INFO: Overall training speed: 188 iterations in 0:03:00 (0.9578 s / it)
[10/31 01:06:43] detectron2.engine.hooks INFO: Total training time: 0:03:00 (0:00:00 on hooks)
[10/31 01:15:07] detectron2 INFO: Rank of current process: 1. World size: 2
[10/31 01:15:08] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.3 (default, May 19 2020, 18:47:26) [GCC 7.3.0]
numpy                   1.19.1
detectron2              0.2.1 @/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 5.4
CUDA compiler           not available
detectron2 arch flags   /cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/_C.cpython-38-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.6.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /opt/common/cuda/cuda-10.0.130/lib64/
Pillow                  7.2.0
torchvision             0.7.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision
torchvision arch flags  /cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20201030
cv2                     4.4.0
----------------------  --------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[10/31 01:15:08] detectron2 INFO: Command line arguments: Namespace(config_file='configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml', dist_url='tcp://127.0.0.1:63010', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['SOLVER.BASE_LR', '0.02', 'SOLVER.WARMUP_ITERS', '5000', 'SOLVER.WARMUP_FACTOR', '2e-4', 'OUTPUT_DIR', 'temp'], resume=False)
[10/31 01:15:08] detectron2 INFO: Contents of args.config_file=configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml:
_BASE_: "../Base-RCNN-FPN.yaml"
MODEL:
  WEIGHTS: "https://download.pytorch.org/models/resnet18-5c106cde.pth"
  MASK_ON: True
  RESNETS:
    DEPTH: 18
    RES2_OUT_CHANNELS: 64
SOLVER:
  BASE_LR: 0.02
  CHECKPOINT_PERIOD: 7330
  # IMS_PER_BATCH: 24
  # STEPS: (40000, 53500)
  # MAX_ITER: 60000
  # WARMUP_FACTOR: 5e-4
  # WARMUP_ITERS: 2000
#OUTPUT_DIR: output/mask_r18_fpn
OUTPUT_DIR: "temp/"

[10/31 01:15:08] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32], [64], [128], [256], [512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 18
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 64
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: 
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://download.pytorch.org/models/resnet18-5c106cde.pth
OUTPUT_DIR: temp
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 7330
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.0002
  WARMUP_ITERS: 5000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[10/31 01:15:08] detectron2.utils.env INFO: Using a generated random seed 8903705
[10/31 01:15:09] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten()
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[10/31 01:15:30] detectron2.data.datasets.coco INFO: Loading datasets/coco/annotations/instances_train2017.json takes 21.41 seconds.
[10/31 01:15:32] detectron2.data.datasets.coco INFO: Loaded 118287 images in COCO format from datasets/coco/annotations/instances_train2017.json
[10/31 01:15:39] detectron2.data.build INFO: Removed 1021 images with no usable annotations. 117266 images left.
[10/31 01:15:45] detectron2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 257253       |   bicycle    | 7056         |      car      | 43533        |
|  motorcycle   | 8654         |   airplane   | 5129         |      bus      | 6061         |
|     train     | 4570         |    truck     | 9970         |     boat      | 10576        |
| traffic light | 12842        | fire hydrant | 1865         |   stop sign   | 1983         |
| parking meter | 1283         |    bench     | 9820         |     bird      | 10542        |
|      cat      | 4766         |     dog      | 5500         |     horse     | 6567         |
|     sheep     | 9223         |     cow      | 8014         |   elephant    | 5484         |
|     bear      | 1294         |    zebra     | 5269         |    giraffe    | 5128         |
|   backpack    | 8714         |   umbrella   | 11265        |    handbag    | 12342        |
|      tie      | 6448         |   suitcase   | 6112         |    frisbee    | 2681         |
|     skis      | 6623         |  snowboard   | 2681         |  sports ball  | 6299         |
|     kite      | 8802         | baseball bat | 3273         | baseball gl.. | 3747         |
|  skateboard   | 5536         |  surfboard   | 6095         | tennis racket | 4807         |
|    bottle     | 24070        |  wine glass  | 7839         |      cup      | 20574        |
|     fork      | 5474         |    knife     | 7760         |     spoon     | 6159         |
|     bowl      | 14323        |    banana    | 9195         |     apple     | 5776         |
|   sandwich    | 4356         |    orange    | 6302         |   broccoli    | 7261         |
|    carrot     | 7758         |   hot dog    | 2884         |     pizza     | 5807         |
|     donut     | 7005         |     cake     | 6296         |     chair     | 38073        |
|     couch     | 5779         | potted plant | 8631         |      bed      | 4192         |
| dining table  | 15695        |    toilet    | 4149         |      tv       | 5803         |
|    laptop     | 4960         |    mouse     | 2261         |    remote     | 5700         |
|   keyboard    | 2854         |  cell phone  | 6422         |   microwave   | 1672         |
|     oven      | 3334         |   toaster    | 225          |     sink      | 5609         |
| refrigerator  | 2634         |     book     | 24077        |     clock     | 6320         |
|     vase      | 6577         |   scissors   | 1464         |  teddy bear   | 4729         |
|  hair drier   | 198          |  toothbrush  | 1945         |               |              |
|     total     | 849949       |              |              |               |              |[0m
[10/31 01:15:45] detectron2.data.common INFO: Serializing 117266 elements to byte tensors and concatenating them all ...
[10/31 01:15:49] detectron2.data.common INFO: Serialized dataset takes 451.21 MiB
[10/31 01:15:49] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[10/31 01:15:49] detectron2.data.build INFO: Using training sampler TrainingSampler
[10/31 01:15:51] fvcore.common.checkpoint INFO: Loading checkpoint from https://download.pytorch.org/models/resnet18-5c106cde.pth
[10/31 01:15:51] fvcore.common.file_io INFO: URL https://download.pytorch.org/models/resnet18-5c106cde.pth cached in /cfarhomes/shishira/.torch/fvcore_cache/models/resnet18-5c106cde.pth
[10/31 01:15:52] fvcore.common.checkpoint INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mbackbone.bottom_up.res5.1.conv2.norm.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn1.{bias, weight}[0m
  [34mroi_heads.box_predictor.bbox_pred.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv1.weight[0m
  [34mroi_heads.box_predictor.cls_score.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.weight[0m
  [34mroi_heads.mask_head.mask_fcn4.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv1.norm.{weight, bias}[0m
  [34mroi_heads.mask_head.deconv.{weight, bias}[0m
  [34mbackbone.fpn_lateral4.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.fpn_output5.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.{bias, weight}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
  [34mroi_heads.box_head.fc2.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.1.conv1.weight[0m
  [34mbackbone.bottom_up.res2.0.conv1.weight[0m
  [34mroi_heads.mask_head.mask_fcn2.{weight, bias}[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{1, 3, 2, 0, 4}[0m
  [34mproposal_generator.rpn_head.conv.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res3.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.fpn_output4.{weight, bias}[0m
  [34mbackbone.fpn_lateral2.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res3.0.conv2.weight[0m
  [34mbackbone.bottom_up.res5.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv2.weight[0m
  [34mbackbone.bottom_up.stem.conv1.weight[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.fpn_output3.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.conv1.weight[0m
  [34mroi_heads.mask_head.mask_fcn3.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.1.conv1.weight[0m
  [34mbackbone.fpn_lateral3.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.norm.{weight, bias}[0m
  [34mbackbone.fpn_lateral5.{weight, bias}[0m
  [34mroi_heads.mask_head.predictor.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.stem.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.conv2.weight[0m
  [34mbackbone.bottom_up.res4.0.shortcut.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv2.norm.{weight, bias}[0m
  [34mroi_heads.box_head.fc1.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv2.weight[0m
  [34mbackbone.bottom_up.res3.1.conv1.weight[0m
  [34mbackbone.fpn_output2.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv2.weight[0m
  [34mbackbone.bottom_up.res3.1.conv2.weight[0m
  [34mbackbone.bottom_up.res4.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv1.weight[0m
  [34mbackbone.bottom_up.res5.1.conv2.weight[0m
  [34mbackbone.bottom_up.res5.0.conv1.weight[0m
  [34mbackbone.bottom_up.res4.1.conv2.weight[0m
  [34mbackbone.bottom_up.res4.0.conv1.norm.{weight, bias}[0m
[10/31 01:15:52] fvcore.common.checkpoint INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mconv1.weight[0m
  [35mbn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv1.weight[0m
  [35mlayer1.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv2.weight[0m
  [35mlayer1.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv1.weight[0m
  [35mlayer1.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv2.weight[0m
  [35mlayer1.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv1.weight[0m
  [35mlayer2.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv2.weight[0m
  [35mlayer2.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.downsample.0.weight[0m
  [35mlayer2.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv1.weight[0m
  [35mlayer2.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv2.weight[0m
  [35mlayer2.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv1.weight[0m
  [35mlayer3.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv2.weight[0m
  [35mlayer3.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.downsample.0.weight[0m
  [35mlayer3.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv1.weight[0m
  [35mlayer3.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv2.weight[0m
  [35mlayer3.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv1.weight[0m
  [35mlayer4.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv2.weight[0m
  [35mlayer4.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.downsample.0.weight[0m
  [35mlayer4.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv1.weight[0m
  [35mlayer4.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv2.weight[0m
  [35mlayer4.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mfc.{weight, bias}[0m
[10/31 01:15:53] detectron2.engine.train_loop INFO: Starting training from iteration 0
[10/31 01:42:59] detectron2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 134, in train
    self.run_step()
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 423, in run_step
    self._trainer.run_step()
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 228, in run_step
    loss_dict = self.model(data)
  File "/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 511, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/modeling/meta_arch/rcnn.py", line 160, in forward
    proposals, proposal_losses = self.proposal_generator(images, features, gt_instances)
  File "/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/modeling/proposal_generator/rpn.py", line 448, in forward
    proposals = self.predict_proposals(
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/modeling/proposal_generator/rpn.py", line 474, in predict_proposals
    return find_top_rpn_proposals(
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/modeling/proposal_generator/proposal_utils.py", line 91, in find_top_rpn_proposals
    raise FloatingPointError(
FloatingPointError: Predicted boxes or scores contain Inf/NaN. Training has diverged.
[10/31 01:42:59] detectron2.engine.hooks INFO: Overall training speed: 1638 iterations in 0:26:48 (0.9821 s / it)
[10/31 01:42:59] detectron2.engine.hooks INFO: Total training time: 0:26:48 (0:00:00 on hooks)
[10/31 04:54:46] detectron2 INFO: Rank of current process: 1. World size: 2
[10/31 04:54:48] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.3 (default, May 19 2020, 18:47:26) [GCC 7.3.0]
numpy                   1.19.1
detectron2              0.2.1 @/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 5.4
CUDA compiler           not available
detectron2 arch flags   /cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/_C.cpython-38-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.6.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /opt/common/cuda/cuda-10.0.130/lib64/
Pillow                  7.2.0
torchvision             0.7.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision
torchvision arch flags  /cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20201030
cv2                     4.4.0
----------------------  --------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[10/31 04:54:48] detectron2 INFO: Command line arguments: Namespace(config_file='configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml', dist_url='tcp://127.0.0.1:63010', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.MASK_ON', 'True', 'SOLVER.BASE_LR', '0.015', 'OUTPUT_DIR', 'temp'], resume=False)
[10/31 04:54:48] detectron2 INFO: Contents of args.config_file=configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml:
_BASE_: "../Base-RCNN-FPN.yaml"
MODEL:
  WEIGHTS: "https://download.pytorch.org/models/resnet18-5c106cde.pth"
  MASK_ON: True
  RESNETS:
    DEPTH: 18
    RES2_OUT_CHANNELS: 64
# DATASETS:
#   TRAIN: ("coco_2017_val",)
#   TEST: ("coco_2017_val",) #("coco_2017_test-dev",)
SOLVER:
  BASE_LR: 0.02
  CHECKPOINT_PERIOD: 7330
  # IMS_PER_BATCH: 24
  # STEPS: (40000, 53500)
  # MAX_ITER: 60000
  # WARMUP_FACTOR: 5e-4
  # WARMUP_ITERS: 2000
OUTPUT_DIR: output/faster_r18_fpn

[10/31 04:54:48] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32], [64], [128], [256], [512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 18
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 64
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: 
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://download.pytorch.org/models/resnet18-5c106cde.pth
OUTPUT_DIR: temp
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.015
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 7330
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[10/31 04:54:48] detectron2.utils.env INFO: Using a generated random seed 48404738
[10/31 04:54:49] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten()
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[10/31 04:55:09] detectron2.data.datasets.coco INFO: Loading datasets/coco/annotations/instances_train2017.json takes 20.95 seconds.
[10/31 04:55:11] detectron2.data.datasets.coco INFO: Loaded 118287 images in COCO format from datasets/coco/annotations/instances_train2017.json
[10/31 04:55:18] detectron2.data.build INFO: Removed 1021 images with no usable annotations. 117266 images left.
[10/31 04:55:24] detectron2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 257253       |   bicycle    | 7056         |      car      | 43533        |
|  motorcycle   | 8654         |   airplane   | 5129         |      bus      | 6061         |
|     train     | 4570         |    truck     | 9970         |     boat      | 10576        |
| traffic light | 12842        | fire hydrant | 1865         |   stop sign   | 1983         |
| parking meter | 1283         |    bench     | 9820         |     bird      | 10542        |
|      cat      | 4766         |     dog      | 5500         |     horse     | 6567         |
|     sheep     | 9223         |     cow      | 8014         |   elephant    | 5484         |
|     bear      | 1294         |    zebra     | 5269         |    giraffe    | 5128         |
|   backpack    | 8714         |   umbrella   | 11265        |    handbag    | 12342        |
|      tie      | 6448         |   suitcase   | 6112         |    frisbee    | 2681         |
|     skis      | 6623         |  snowboard   | 2681         |  sports ball  | 6299         |
|     kite      | 8802         | baseball bat | 3273         | baseball gl.. | 3747         |
|  skateboard   | 5536         |  surfboard   | 6095         | tennis racket | 4807         |
|    bottle     | 24070        |  wine glass  | 7839         |      cup      | 20574        |
|     fork      | 5474         |    knife     | 7760         |     spoon     | 6159         |
|     bowl      | 14323        |    banana    | 9195         |     apple     | 5776         |
|   sandwich    | 4356         |    orange    | 6302         |   broccoli    | 7261         |
|    carrot     | 7758         |   hot dog    | 2884         |     pizza     | 5807         |
|     donut     | 7005         |     cake     | 6296         |     chair     | 38073        |
|     couch     | 5779         | potted plant | 8631         |      bed      | 4192         |
| dining table  | 15695        |    toilet    | 4149         |      tv       | 5803         |
|    laptop     | 4960         |    mouse     | 2261         |    remote     | 5700         |
|   keyboard    | 2854         |  cell phone  | 6422         |   microwave   | 1672         |
|     oven      | 3334         |   toaster    | 225          |     sink      | 5609         |
| refrigerator  | 2634         |     book     | 24077        |     clock     | 6320         |
|     vase      | 6577         |   scissors   | 1464         |  teddy bear   | 4729         |
|  hair drier   | 198          |  toothbrush  | 1945         |               |              |
|     total     | 849949       |              |              |               |              |[0m
[10/31 04:55:24] detectron2.data.common INFO: Serializing 117266 elements to byte tensors and concatenating them all ...
[10/31 04:55:28] detectron2.data.common INFO: Serialized dataset takes 451.21 MiB
[10/31 04:55:28] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[10/31 04:55:28] detectron2.data.build INFO: Using training sampler TrainingSampler
[10/31 04:55:31] fvcore.common.checkpoint INFO: Loading checkpoint from https://download.pytorch.org/models/resnet18-5c106cde.pth
[10/31 04:55:31] fvcore.common.file_io INFO: URL https://download.pytorch.org/models/resnet18-5c106cde.pth cached in /cfarhomes/shishira/.torch/fvcore_cache/models/resnet18-5c106cde.pth
[10/31 04:55:31] fvcore.common.checkpoint INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mbackbone.fpn_output2.{weight, bias}[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv1.weight[0m
  [34mbackbone.bottom_up.res3.0.conv1.weight[0m
  [34mbackbone.fpn_output3.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.fpn_lateral5.{bias, weight}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv1.weight[0m
  [34mbackbone.bottom_up.res3.1.conv2.weight[0m
  [34mbackbone.bottom_up.res4.0.conv2.weight[0m
  [34mroi_heads.mask_head.deconv.{bias, weight}[0m
  [34mbackbone.fpn_lateral3.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.weight[0m
  [34mbackbone.fpn_lateral4.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.norm.{bias, weight}[0m
  [34mbackbone.fpn_output5.{bias, weight}[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{0, 3, 2, 1, 4}[0m
  [34mroi_heads.box_predictor.bbox_pred.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.stem.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv2.weight[0m
  [34mbackbone.fpn_output4.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv2.norm.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn4.{bias, weight}[0m
  [34mroi_heads.mask_head.predictor.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.shortcut.weight[0m
  [34mroi_heads.mask_head.mask_fcn2.{weight, bias}[0m
  [34mproposal_generator.rpn_head.conv.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.shortcut.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.stem.conv1.weight[0m
  [34mbackbone.bottom_up.res5.1.conv2.weight[0m
  [34mbackbone.bottom_up.res5.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv2.norm.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn1.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv1.weight[0m
  [34mbackbone.bottom_up.res2.0.conv2.weight[0m
  [34mbackbone.bottom_up.res4.1.conv1.weight[0m
  [34mbackbone.bottom_up.res4.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv1.weight[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.{bias, weight}[0m
  [34mroi_heads.box_predictor.cls_score.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.1.conv2.weight[0m
  [34mbackbone.bottom_up.res4.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv1.weight[0m
  [34mroi_heads.box_head.fc1.{bias, weight}[0m
  [34mroi_heads.box_head.fc2.{weight, bias}[0m
  [34mbackbone.fpn_lateral2.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.1.conv1.weight[0m
  [34mroi_heads.mask_head.mask_fcn3.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.conv2.weight[0m
  [34mbackbone.bottom_up.res3.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res2.1.conv2.weight[0m
[10/31 04:55:31] fvcore.common.checkpoint INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mconv1.weight[0m
  [35mbn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv1.weight[0m
  [35mlayer1.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv2.weight[0m
  [35mlayer1.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv1.weight[0m
  [35mlayer1.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv2.weight[0m
  [35mlayer1.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv1.weight[0m
  [35mlayer2.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv2.weight[0m
  [35mlayer2.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.downsample.0.weight[0m
  [35mlayer2.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv1.weight[0m
  [35mlayer2.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv2.weight[0m
  [35mlayer2.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv1.weight[0m
  [35mlayer3.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv2.weight[0m
  [35mlayer3.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.downsample.0.weight[0m
  [35mlayer3.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv1.weight[0m
  [35mlayer3.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv2.weight[0m
  [35mlayer3.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv1.weight[0m
  [35mlayer4.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv2.weight[0m
  [35mlayer4.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.downsample.0.weight[0m
  [35mlayer4.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv1.weight[0m
  [35mlayer4.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv2.weight[0m
  [35mlayer4.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mfc.{weight, bias}[0m
[10/31 04:55:32] detectron2.engine.train_loop INFO: Starting training from iteration 0
[10/31 04:56:30] detectron2.engine.hooks INFO: Overall training speed: 47 iterations in 0:00:41 (0.8837 s / it)
[10/31 04:56:30] detectron2.engine.hooks INFO: Total training time: 0:00:41 (0:00:00 on hooks)
[10/31 13:10:54] detectron2 INFO: Rank of current process: 1. World size: 2
[10/31 13:10:55] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.3 (default, May 19 2020, 18:47:26) [GCC 7.3.0]
numpy                   1.19.1
detectron2              0.2.1 @/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 5.4
CUDA compiler           not available
detectron2 arch flags   /cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/_C.cpython-38-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.6.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /opt/common/cuda/cuda-10.0.130/lib64/
Pillow                  7.2.0
torchvision             0.7.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision
torchvision arch flags  /cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20201030
cv2                     4.4.0
----------------------  --------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[10/31 13:10:55] detectron2 INFO: Command line arguments: Namespace(config_file='configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml', dist_url='tcp://127.0.0.1:63010', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.MASK_ON', 'True', 'SOLVER.BASE_LR', '0.015', 'OUTPUT_DIR', 'temp'], resume=False)
[10/31 13:10:55] detectron2 INFO: Contents of args.config_file=configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml:
_BASE_: "../Base-RCNN-FPN.yaml"
MODEL:
  WEIGHTS: "https://download.pytorch.org/models/resnet18-5c106cde.pth"
  MASK_ON: True
  RESNETS:
    DEPTH: 18
    RES2_OUT_CHANNELS: 64
# DATASETS:
#   TRAIN: ("coco_2017_val",)
#   TEST: ("coco_2017_val",) #("coco_2017_test-dev",)
SOLVER:
  BASE_LR: 0.02
  CHECKPOINT_PERIOD: 7330
  # IMS_PER_BATCH: 24
  # STEPS: (40000, 53500)
  # MAX_ITER: 60000
  # WARMUP_FACTOR: 5e-4
  # WARMUP_ITERS: 2000
OUTPUT_DIR: output/faster_r18_fpn

[10/31 13:10:55] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32], [64], [128], [256], [512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 18
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 64
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: 
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://download.pytorch.org/models/resnet18-5c106cde.pth
OUTPUT_DIR: temp
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.015
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 7330
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[10/31 13:10:55] detectron2.utils.env INFO: Using a generated random seed 56000769
[10/31 13:10:56] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten()
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[10/31 13:11:17] detectron2.data.datasets.coco INFO: Loading datasets/coco/annotations/instances_train2017.json takes 21.30 seconds.
[10/31 13:11:19] detectron2.data.datasets.coco INFO: Loaded 118287 images in COCO format from datasets/coco/annotations/instances_train2017.json
[10/31 13:11:26] detectron2.data.build INFO: Removed 1021 images with no usable annotations. 117266 images left.
[10/31 13:11:31] detectron2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 257253       |   bicycle    | 7056         |      car      | 43533        |
|  motorcycle   | 8654         |   airplane   | 5129         |      bus      | 6061         |
|     train     | 4570         |    truck     | 9970         |     boat      | 10576        |
| traffic light | 12842        | fire hydrant | 1865         |   stop sign   | 1983         |
| parking meter | 1283         |    bench     | 9820         |     bird      | 10542        |
|      cat      | 4766         |     dog      | 5500         |     horse     | 6567         |
|     sheep     | 9223         |     cow      | 8014         |   elephant    | 5484         |
|     bear      | 1294         |    zebra     | 5269         |    giraffe    | 5128         |
|   backpack    | 8714         |   umbrella   | 11265        |    handbag    | 12342        |
|      tie      | 6448         |   suitcase   | 6112         |    frisbee    | 2681         |
|     skis      | 6623         |  snowboard   | 2681         |  sports ball  | 6299         |
|     kite      | 8802         | baseball bat | 3273         | baseball gl.. | 3747         |
|  skateboard   | 5536         |  surfboard   | 6095         | tennis racket | 4807         |
|    bottle     | 24070        |  wine glass  | 7839         |      cup      | 20574        |
|     fork      | 5474         |    knife     | 7760         |     spoon     | 6159         |
|     bowl      | 14323        |    banana    | 9195         |     apple     | 5776         |
|   sandwich    | 4356         |    orange    | 6302         |   broccoli    | 7261         |
|    carrot     | 7758         |   hot dog    | 2884         |     pizza     | 5807         |
|     donut     | 7005         |     cake     | 6296         |     chair     | 38073        |
|     couch     | 5779         | potted plant | 8631         |      bed      | 4192         |
| dining table  | 15695        |    toilet    | 4149         |      tv       | 5803         |
|    laptop     | 4960         |    mouse     | 2261         |    remote     | 5700         |
|   keyboard    | 2854         |  cell phone  | 6422         |   microwave   | 1672         |
|     oven      | 3334         |   toaster    | 225          |     sink      | 5609         |
| refrigerator  | 2634         |     book     | 24077        |     clock     | 6320         |
|     vase      | 6577         |   scissors   | 1464         |  teddy bear   | 4729         |
|  hair drier   | 198          |  toothbrush  | 1945         |               |              |
|     total     | 849949       |              |              |               |              |[0m
[10/31 13:11:31] detectron2.data.common INFO: Serializing 117266 elements to byte tensors and concatenating them all ...
[10/31 13:11:35] detectron2.data.common INFO: Serialized dataset takes 451.21 MiB
[10/31 13:11:35] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[10/31 13:11:35] detectron2.data.build INFO: Using training sampler TrainingSampler
[10/31 13:11:40] fvcore.common.checkpoint INFO: Loading checkpoint from https://download.pytorch.org/models/resnet18-5c106cde.pth
[10/31 13:11:40] fvcore.common.file_io INFO: URL https://download.pytorch.org/models/resnet18-5c106cde.pth cached in /cfarhomes/shishira/.torch/fvcore_cache/models/resnet18-5c106cde.pth
[10/31 13:11:40] fvcore.common.checkpoint INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mproposal_generator.anchor_generator.cell_anchors.{0, 2, 1, 4, 3}[0m
  [34mbackbone.fpn_lateral3.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv2.weight[0m
  [34mproposal_generator.rpn_head.conv.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.stem.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.norm.{weight, bias}[0m
  [34mbackbone.fpn_output5.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.shortcut.norm.{bias, weight}[0m
  [34mroi_heads.box_predictor.bbox_pred.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res5.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv1.weight[0m
  [34mbackbone.bottom_up.res2.0.conv1.weight[0m
  [34mbackbone.bottom_up.res4.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.stem.conv1.weight[0m
  [34mbackbone.fpn_lateral2.{bias, weight}[0m
  [34mbackbone.fpn_output3.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn2.{bias, weight}[0m
  [34mbackbone.fpn_output2.{weight, bias}[0m
  [34mbackbone.fpn_lateral5.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv1.norm.{weight, bias}[0m
  [34mroi_heads.box_predictor.cls_score.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res5.0.conv1.weight[0m
  [34mroi_heads.mask_head.deconv.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.1.conv1.norm.{weight, bias}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
  [34mroi_heads.box_head.fc2.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.1.conv1.weight[0m
  [34mbackbone.fpn_output4.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.fpn_lateral4.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res2.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv1.weight[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn1.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.1.conv2.weight[0m
  [34mbackbone.bottom_up.res4.0.conv1.weight[0m
  [34mroi_heads.box_head.fc1.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.conv2.weight[0m
  [34mbackbone.bottom_up.res3.0.conv1.weight[0m
  [34mbackbone.bottom_up.res3.0.shortcut.norm.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn4.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv2.weight[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv2.weight[0m
  [34mbackbone.bottom_up.res5.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv1.weight[0m
  [34mroi_heads.mask_head.mask_fcn3.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv2.weight[0m
  [34mroi_heads.mask_head.predictor.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv2.weight[0m
  [34mbackbone.bottom_up.res5.0.conv2.weight[0m
[10/31 13:11:40] fvcore.common.checkpoint INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mconv1.weight[0m
  [35mbn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv1.weight[0m
  [35mlayer1.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv2.weight[0m
  [35mlayer1.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv1.weight[0m
  [35mlayer1.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv2.weight[0m
  [35mlayer1.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv1.weight[0m
  [35mlayer2.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv2.weight[0m
  [35mlayer2.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.downsample.0.weight[0m
  [35mlayer2.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv1.weight[0m
  [35mlayer2.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv2.weight[0m
  [35mlayer2.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv1.weight[0m
  [35mlayer3.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv2.weight[0m
  [35mlayer3.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.downsample.0.weight[0m
  [35mlayer3.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv1.weight[0m
  [35mlayer3.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv2.weight[0m
  [35mlayer3.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv1.weight[0m
  [35mlayer4.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv2.weight[0m
  [35mlayer4.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.downsample.0.weight[0m
  [35mlayer4.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv1.weight[0m
  [35mlayer4.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv2.weight[0m
  [35mlayer4.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mfc.{weight, bias}[0m
[10/31 13:11:41] detectron2.engine.train_loop INFO: Starting training from iteration 0
[10/31 13:12:33] detectron2.engine.hooks INFO: Overall training speed: 37 iterations in 0:00:35 (0.9594 s / it)
[10/31 13:12:33] detectron2.engine.hooks INFO: Total training time: 0:00:35 (0:00:00 on hooks)
[10/31 13:20:37] detectron2 INFO: Rank of current process: 1. World size: 2
[10/31 13:20:38] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.3 (default, May 19 2020, 18:47:26) [GCC 7.3.0]
numpy                   1.19.1
detectron2              0.2.1 @/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 5.4
CUDA compiler           not available
detectron2 arch flags   /cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/_C.cpython-38-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.6.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /opt/common/cuda/cuda-10.0.130/lib64/
Pillow                  7.2.0
torchvision             0.7.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision
torchvision arch flags  /cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20201030
cv2                     4.4.0
----------------------  --------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[10/31 13:20:38] detectron2 INFO: Command line arguments: Namespace(config_file='configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml', dist_url='tcp://127.0.0.1:63010', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.MASK_ON', 'True', 'SOLVER.BASE_LR', '0.015', 'OUTPUT_DIR', 'temp'], resume=False)
[10/31 13:20:38] detectron2 INFO: Contents of args.config_file=configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml:
_BASE_: "../Base-RCNN-FPN.yaml"
MODEL:
  WEIGHTS: "https://download.pytorch.org/models/resnet18-5c106cde.pth"
  MASK_ON: True
  RESNETS:
    DEPTH: 18
    RES2_OUT_CHANNELS: 64
# DATASETS:
#   TRAIN: ("coco_2017_val",)
#   TEST: ("coco_2017_val",) #("coco_2017_test-dev",)
SOLVER:
  BASE_LR: 0.02
  CHECKPOINT_PERIOD: 7330
  # IMS_PER_BATCH: 24
  # STEPS: (40000, 53500)
  # MAX_ITER: 60000
  # WARMUP_FACTOR: 5e-4
  # WARMUP_ITERS: 2000
OUTPUT_DIR: output/faster_r18_fpn

[10/31 13:20:38] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32], [64], [128], [256], [512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 18
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 64
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: 
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://download.pytorch.org/models/resnet18-5c106cde.pth
OUTPUT_DIR: temp
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.015
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 7330
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[10/31 13:20:38] detectron2.utils.env INFO: Using a generated random seed 38731571
[10/31 13:20:39] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten()
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[10/31 13:21:01] detectron2.data.datasets.coco INFO: Loading datasets/coco/annotations/instances_train2017.json takes 22.48 seconds.
[10/31 13:21:03] detectron2.data.datasets.coco INFO: Loaded 118287 images in COCO format from datasets/coco/annotations/instances_train2017.json
[10/31 13:21:10] detectron2.data.build INFO: Removed 1021 images with no usable annotations. 117266 images left.
[10/31 13:21:16] detectron2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 257253       |   bicycle    | 7056         |      car      | 43533        |
|  motorcycle   | 8654         |   airplane   | 5129         |      bus      | 6061         |
|     train     | 4570         |    truck     | 9970         |     boat      | 10576        |
| traffic light | 12842        | fire hydrant | 1865         |   stop sign   | 1983         |
| parking meter | 1283         |    bench     | 9820         |     bird      | 10542        |
|      cat      | 4766         |     dog      | 5500         |     horse     | 6567         |
|     sheep     | 9223         |     cow      | 8014         |   elephant    | 5484         |
|     bear      | 1294         |    zebra     | 5269         |    giraffe    | 5128         |
|   backpack    | 8714         |   umbrella   | 11265        |    handbag    | 12342        |
|      tie      | 6448         |   suitcase   | 6112         |    frisbee    | 2681         |
|     skis      | 6623         |  snowboard   | 2681         |  sports ball  | 6299         |
|     kite      | 8802         | baseball bat | 3273         | baseball gl.. | 3747         |
|  skateboard   | 5536         |  surfboard   | 6095         | tennis racket | 4807         |
|    bottle     | 24070        |  wine glass  | 7839         |      cup      | 20574        |
|     fork      | 5474         |    knife     | 7760         |     spoon     | 6159         |
|     bowl      | 14323        |    banana    | 9195         |     apple     | 5776         |
|   sandwich    | 4356         |    orange    | 6302         |   broccoli    | 7261         |
|    carrot     | 7758         |   hot dog    | 2884         |     pizza     | 5807         |
|     donut     | 7005         |     cake     | 6296         |     chair     | 38073        |
|     couch     | 5779         | potted plant | 8631         |      bed      | 4192         |
| dining table  | 15695        |    toilet    | 4149         |      tv       | 5803         |
|    laptop     | 4960         |    mouse     | 2261         |    remote     | 5700         |
|   keyboard    | 2854         |  cell phone  | 6422         |   microwave   | 1672         |
|     oven      | 3334         |   toaster    | 225          |     sink      | 5609         |
| refrigerator  | 2634         |     book     | 24077        |     clock     | 6320         |
|     vase      | 6577         |   scissors   | 1464         |  teddy bear   | 4729         |
|  hair drier   | 198          |  toothbrush  | 1945         |               |              |
|     total     | 849949       |              |              |               |              |[0m
[10/31 13:21:16] detectron2.data.common INFO: Serializing 117266 elements to byte tensors and concatenating them all ...
[10/31 13:21:20] detectron2.data.common INFO: Serialized dataset takes 451.21 MiB
[10/31 13:21:20] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[10/31 13:21:20] detectron2.data.build INFO: Using training sampler TrainingSampler
[10/31 13:21:23] fvcore.common.checkpoint INFO: Loading checkpoint from https://download.pytorch.org/models/resnet18-5c106cde.pth
[10/31 13:21:23] fvcore.common.file_io INFO: URL https://download.pytorch.org/models/resnet18-5c106cde.pth cached in /cfarhomes/shishira/.torch/fvcore_cache/models/resnet18-5c106cde.pth
[10/31 13:21:23] fvcore.common.checkpoint INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mbackbone.bottom_up.res4.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.fpn_lateral3.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv1.weight[0m
  [34mbackbone.fpn_output5.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.shortcut.norm.{weight, bias}[0m
  [34mroi_heads.mask_head.predictor.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res5.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.stem.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.1.conv2.weight[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn2.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.fpn_output3.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv2.weight[0m
  [34mbackbone.fpn_lateral4.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv2.weight[0m
  [34mbackbone.bottom_up.res2.1.conv2.norm.{weight, bias}[0m
  [34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv2.weight[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.1.conv1.norm.{weight, bias}[0m
  [34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
  [34mproposal_generator.rpn_head.conv.{weight, bias}[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{2, 1, 4, 0, 3}[0m
  [34mbackbone.bottom_up.res2.0.conv2.norm.{bias, weight}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{weight, bias}[0m
  [34mroi_heads.box_head.fc2.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn1.{bias, weight}[0m
  [34mbackbone.fpn_output4.{bias, weight}[0m
  [34mbackbone.fpn_output2.{weight, bias}[0m
  [34mroi_heads.box_head.fc1.{weight, bias}[0m
  [34mbackbone.fpn_lateral5.{bias, weight}[0m
  [34mbackbone.bottom_up.stem.conv1.weight[0m
  [34mroi_heads.mask_head.deconv.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv2.weight[0m
  [34mbackbone.bottom_up.res5.0.conv1.weight[0m
  [34mbackbone.bottom_up.res2.0.conv2.weight[0m
  [34mbackbone.bottom_up.res3.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res3.0.conv2.weight[0m
  [34mbackbone.bottom_up.res3.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.1.conv1.weight[0m
  [34mbackbone.fpn_lateral2.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn3.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv1.weight[0m
  [34mroi_heads.mask_head.mask_fcn4.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv2.weight[0m
  [34mbackbone.bottom_up.res3.0.conv1.weight[0m
  [34mbackbone.bottom_up.res2.0.conv1.weight[0m
  [34mbackbone.bottom_up.res5.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res2.1.conv1.weight[0m
  [34mbackbone.bottom_up.res4.0.conv1.weight[0m
[10/31 13:21:23] fvcore.common.checkpoint INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mconv1.weight[0m
  [35mbn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv1.weight[0m
  [35mlayer1.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv2.weight[0m
  [35mlayer1.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv1.weight[0m
  [35mlayer1.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv2.weight[0m
  [35mlayer1.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv1.weight[0m
  [35mlayer2.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv2.weight[0m
  [35mlayer2.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.downsample.0.weight[0m
  [35mlayer2.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv1.weight[0m
  [35mlayer2.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv2.weight[0m
  [35mlayer2.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv1.weight[0m
  [35mlayer3.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv2.weight[0m
  [35mlayer3.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.downsample.0.weight[0m
  [35mlayer3.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv1.weight[0m
  [35mlayer3.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv2.weight[0m
  [35mlayer3.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv1.weight[0m
  [35mlayer4.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv2.weight[0m
  [35mlayer4.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.downsample.0.weight[0m
  [35mlayer4.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv1.weight[0m
  [35mlayer4.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv2.weight[0m
  [35mlayer4.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mfc.{weight, bias}[0m
[10/31 13:42:37] detectron2 INFO: Rank of current process: 1. World size: 2
[10/31 13:42:38] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.3 (default, May 19 2020, 18:47:26) [GCC 7.3.0]
numpy                   1.19.1
detectron2              0.2.1 @/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 5.4
CUDA compiler           not available
detectron2 arch flags   /cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/_C.cpython-38-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.6.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /opt/common/cuda/cuda-10.0.130/lib64/
Pillow                  7.2.0
torchvision             0.7.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision
torchvision arch flags  /cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20201030
cv2                     4.4.0
----------------------  --------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[10/31 13:42:38] detectron2 INFO: Command line arguments: Namespace(config_file='configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml', dist_url='tcp://127.0.0.1:63010', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.MASK_ON', 'True', 'SOLVER.BASE_LR', '0.015', 'OUTPUT_DIR', 'temp'], resume=False)
[10/31 13:42:38] detectron2 INFO: Contents of args.config_file=configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml:
_BASE_: "../Base-RCNN-FPN.yaml"
MODEL:
  WEIGHTS: "https://download.pytorch.org/models/resnet18-5c106cde.pth"
  MASK_ON: True
  RESNETS:
    DEPTH: 18
    RES2_OUT_CHANNELS: 64
# DATASETS:
#   TRAIN: ("coco_2017_val",)
#   TEST: ("coco_2017_val",) #("coco_2017_test-dev",)
SOLVER:
  BASE_LR: 0.02
  CHECKPOINT_PERIOD: 7330
  # IMS_PER_BATCH: 24
  # STEPS: (40000, 53500)
  # MAX_ITER: 60000
  # WARMUP_FACTOR: 5e-4
  # WARMUP_ITERS: 2000
OUTPUT_DIR: output/faster_r18_fpn

[10/31 13:42:38] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32], [64], [128], [256], [512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 18
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 64
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: 
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://download.pytorch.org/models/resnet18-5c106cde.pth
OUTPUT_DIR: temp
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.015
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 7330
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[10/31 13:42:38] detectron2.utils.env INFO: Using a generated random seed 38628086
[10/31 13:42:39] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten()
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[10/31 13:43:01] detectron2.data.datasets.coco INFO: Loading datasets/coco/annotations/instances_train2017.json takes 22.47 seconds.
[10/31 13:43:02] detectron2.data.datasets.coco INFO: Loaded 118287 images in COCO format from datasets/coco/annotations/instances_train2017.json
[10/31 13:43:10] detectron2.data.build INFO: Removed 1021 images with no usable annotations. 117266 images left.
[10/31 13:43:15] detectron2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 257253       |   bicycle    | 7056         |      car      | 43533        |
|  motorcycle   | 8654         |   airplane   | 5129         |      bus      | 6061         |
|     train     | 4570         |    truck     | 9970         |     boat      | 10576        |
| traffic light | 12842        | fire hydrant | 1865         |   stop sign   | 1983         |
| parking meter | 1283         |    bench     | 9820         |     bird      | 10542        |
|      cat      | 4766         |     dog      | 5500         |     horse     | 6567         |
|     sheep     | 9223         |     cow      | 8014         |   elephant    | 5484         |
|     bear      | 1294         |    zebra     | 5269         |    giraffe    | 5128         |
|   backpack    | 8714         |   umbrella   | 11265        |    handbag    | 12342        |
|      tie      | 6448         |   suitcase   | 6112         |    frisbee    | 2681         |
|     skis      | 6623         |  snowboard   | 2681         |  sports ball  | 6299         |
|     kite      | 8802         | baseball bat | 3273         | baseball gl.. | 3747         |
|  skateboard   | 5536         |  surfboard   | 6095         | tennis racket | 4807         |
|    bottle     | 24070        |  wine glass  | 7839         |      cup      | 20574        |
|     fork      | 5474         |    knife     | 7760         |     spoon     | 6159         |
|     bowl      | 14323        |    banana    | 9195         |     apple     | 5776         |
|   sandwich    | 4356         |    orange    | 6302         |   broccoli    | 7261         |
|    carrot     | 7758         |   hot dog    | 2884         |     pizza     | 5807         |
|     donut     | 7005         |     cake     | 6296         |     chair     | 38073        |
|     couch     | 5779         | potted plant | 8631         |      bed      | 4192         |
| dining table  | 15695        |    toilet    | 4149         |      tv       | 5803         |
|    laptop     | 4960         |    mouse     | 2261         |    remote     | 5700         |
|   keyboard    | 2854         |  cell phone  | 6422         |   microwave   | 1672         |
|     oven      | 3334         |   toaster    | 225          |     sink      | 5609         |
| refrigerator  | 2634         |     book     | 24077        |     clock     | 6320         |
|     vase      | 6577         |   scissors   | 1464         |  teddy bear   | 4729         |
|  hair drier   | 198          |  toothbrush  | 1945         |               |              |
|     total     | 849949       |              |              |               |              |[0m
[10/31 13:43:15] detectron2.data.common INFO: Serializing 117266 elements to byte tensors and concatenating them all ...
[10/31 13:43:19] detectron2.data.common INFO: Serialized dataset takes 451.21 MiB
[10/31 13:43:19] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[10/31 13:43:19] detectron2.data.build INFO: Using training sampler TrainingSampler
[10/31 13:43:22] fvcore.common.checkpoint INFO: Loading checkpoint from https://download.pytorch.org/models/resnet18-5c106cde.pth
[10/31 13:43:22] fvcore.common.file_io INFO: URL https://download.pytorch.org/models/resnet18-5c106cde.pth cached in /cfarhomes/shishira/.torch/fvcore_cache/models/resnet18-5c106cde.pth
[10/31 13:43:23] fvcore.common.checkpoint INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mbackbone.bottom_up.res3.0.shortcut.norm.{bias, weight}[0m
  [34mroi_heads.box_head.fc2.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.conv2.norm.{weight, bias}[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{1, 4, 0, 2, 3}[0m
  [34mroi_heads.box_predictor.bbox_pred.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv2.norm.{bias, weight}[0m
  [34mroi_heads.mask_head.deconv.{weight, bias}[0m
  [34mbackbone.bottom_up.stem.conv1.weight[0m
  [34mbackbone.bottom_up.res2.1.conv2.weight[0m
  [34mbackbone.bottom_up.stem.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.fpn_lateral4.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.conv2.weight[0m
  [34mbackbone.bottom_up.res5.0.conv1.weight[0m
  [34mbackbone.fpn_output4.{weight, bias}[0m
  [34mroi_heads.box_predictor.cls_score.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn3.{bias, weight}[0m
  [34mbackbone.fpn_lateral5.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn2.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.conv2.weight[0m
  [34mbackbone.fpn_lateral3.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.1.conv1.weight[0m
  [34mbackbone.bottom_up.res4.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.1.conv2.norm.{weight, bias}[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.shortcut.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv2.norm.{bias, weight}[0m
  [34mroi_heads.mask_head.predictor.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv1.weight[0m
  [34mbackbone.fpn_lateral2.{weight, bias}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.1.conv2.weight[0m
  [34mbackbone.bottom_up.res3.1.conv1.weight[0m
  [34mbackbone.bottom_up.res4.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res4.1.conv1.weight[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.fpn_output3.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.weight[0m
  [34mroi_heads.mask_head.mask_fcn1.{weight, bias}[0m
  [34mbackbone.fpn_output5.{weight, bias}[0m
  [34mproposal_generator.rpn_head.conv.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res5.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv1.weight[0m
  [34mbackbone.bottom_up.res3.0.conv1.weight[0m
  [34mroi_heads.mask_head.mask_fcn4.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.conv1.weight[0m
  [34mbackbone.bottom_up.res5.0.conv2.weight[0m
  [34mbackbone.bottom_up.res5.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.fpn_output2.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv2.weight[0m
  [34mbackbone.bottom_up.res3.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv2.weight[0m
  [34mbackbone.bottom_up.res2.0.conv2.weight[0m
  [34mroi_heads.box_head.fc1.{bias, weight}[0m
[10/31 13:43:23] fvcore.common.checkpoint INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mconv1.weight[0m
  [35mbn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv1.weight[0m
  [35mlayer1.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv2.weight[0m
  [35mlayer1.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv1.weight[0m
  [35mlayer1.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv2.weight[0m
  [35mlayer1.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv1.weight[0m
  [35mlayer2.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv2.weight[0m
  [35mlayer2.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.downsample.0.weight[0m
  [35mlayer2.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv1.weight[0m
  [35mlayer2.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv2.weight[0m
  [35mlayer2.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv1.weight[0m
  [35mlayer3.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv2.weight[0m
  [35mlayer3.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.downsample.0.weight[0m
  [35mlayer3.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv1.weight[0m
  [35mlayer3.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv2.weight[0m
  [35mlayer3.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv1.weight[0m
  [35mlayer4.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv2.weight[0m
  [35mlayer4.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.downsample.0.weight[0m
  [35mlayer4.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv1.weight[0m
  [35mlayer4.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv2.weight[0m
  [35mlayer4.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mfc.{weight, bias}[0m
[10/31 13:45:42] detectron2 INFO: Rank of current process: 1. World size: 2
[10/31 13:45:43] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.3 (default, May 19 2020, 18:47:26) [GCC 7.3.0]
numpy                   1.19.1
detectron2              0.2.1 @/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 5.4
CUDA compiler           not available
detectron2 arch flags   /cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/_C.cpython-38-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.6.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /opt/common/cuda/cuda-10.0.130/lib64/
Pillow                  7.2.0
torchvision             0.7.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision
torchvision arch flags  /cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20201030
cv2                     4.4.0
----------------------  --------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[10/31 13:45:43] detectron2 INFO: Command line arguments: Namespace(config_file='configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml', dist_url='tcp://127.0.0.1:63010', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.MASK_ON', 'True', 'SOLVER.BASE_LR', '0.015', 'OUTPUT_DIR', 'temp'], resume=False)
[10/31 13:45:43] detectron2 INFO: Contents of args.config_file=configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml:
_BASE_: "../Base-RCNN-FPN.yaml"
MODEL:
  WEIGHTS: "https://download.pytorch.org/models/resnet18-5c106cde.pth"
  MASK_ON: True
  RESNETS:
    DEPTH: 18
    RES2_OUT_CHANNELS: 64
# DATASETS:
#   TRAIN: ("coco_2017_val",)
#   TEST: ("coco_2017_val",) #("coco_2017_test-dev",)
SOLVER:
  BASE_LR: 0.02
  CHECKPOINT_PERIOD: 7330
  # IMS_PER_BATCH: 24
  # STEPS: (40000, 53500)
  # MAX_ITER: 60000
  # WARMUP_FACTOR: 5e-4
  # WARMUP_ITERS: 2000
OUTPUT_DIR: output/faster_r18_fpn

[10/31 13:45:43] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32], [64], [128], [256], [512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 18
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 64
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: 
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://download.pytorch.org/models/resnet18-5c106cde.pth
OUTPUT_DIR: temp
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.015
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 7330
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[10/31 13:45:43] detectron2.utils.env INFO: Using a generated random seed 43762586
[10/31 13:45:44] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten()
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[10/31 13:46:04] detectron2.data.datasets.coco INFO: Loading datasets/coco/annotations/instances_train2017.json takes 19.97 seconds.
[10/31 13:46:05] detectron2.data.datasets.coco INFO: Loaded 118287 images in COCO format from datasets/coco/annotations/instances_train2017.json
[10/31 13:46:13] detectron2.data.build INFO: Removed 1021 images with no usable annotations. 117266 images left.
[10/31 13:46:18] detectron2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 257253       |   bicycle    | 7056         |      car      | 43533        |
|  motorcycle   | 8654         |   airplane   | 5129         |      bus      | 6061         |
|     train     | 4570         |    truck     | 9970         |     boat      | 10576        |
| traffic light | 12842        | fire hydrant | 1865         |   stop sign   | 1983         |
| parking meter | 1283         |    bench     | 9820         |     bird      | 10542        |
|      cat      | 4766         |     dog      | 5500         |     horse     | 6567         |
|     sheep     | 9223         |     cow      | 8014         |   elephant    | 5484         |
|     bear      | 1294         |    zebra     | 5269         |    giraffe    | 5128         |
|   backpack    | 8714         |   umbrella   | 11265        |    handbag    | 12342        |
|      tie      | 6448         |   suitcase   | 6112         |    frisbee    | 2681         |
|     skis      | 6623         |  snowboard   | 2681         |  sports ball  | 6299         |
|     kite      | 8802         | baseball bat | 3273         | baseball gl.. | 3747         |
|  skateboard   | 5536         |  surfboard   | 6095         | tennis racket | 4807         |
|    bottle     | 24070        |  wine glass  | 7839         |      cup      | 20574        |
|     fork      | 5474         |    knife     | 7760         |     spoon     | 6159         |
|     bowl      | 14323        |    banana    | 9195         |     apple     | 5776         |
|   sandwich    | 4356         |    orange    | 6302         |   broccoli    | 7261         |
|    carrot     | 7758         |   hot dog    | 2884         |     pizza     | 5807         |
|     donut     | 7005         |     cake     | 6296         |     chair     | 38073        |
|     couch     | 5779         | potted plant | 8631         |      bed      | 4192         |
| dining table  | 15695        |    toilet    | 4149         |      tv       | 5803         |
|    laptop     | 4960         |    mouse     | 2261         |    remote     | 5700         |
|   keyboard    | 2854         |  cell phone  | 6422         |   microwave   | 1672         |
|     oven      | 3334         |   toaster    | 225          |     sink      | 5609         |
| refrigerator  | 2634         |     book     | 24077        |     clock     | 6320         |
|     vase      | 6577         |   scissors   | 1464         |  teddy bear   | 4729         |
|  hair drier   | 198          |  toothbrush  | 1945         |               |              |
|     total     | 849949       |              |              |               |              |[0m
[10/31 13:46:18] detectron2.data.common INFO: Serializing 117266 elements to byte tensors and concatenating them all ...
[10/31 13:46:23] detectron2.data.common INFO: Serialized dataset takes 451.21 MiB
[10/31 13:46:23] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[10/31 13:46:23] detectron2.data.build INFO: Using training sampler TrainingSampler
[10/31 13:46:25] fvcore.common.checkpoint INFO: Loading checkpoint from https://download.pytorch.org/models/resnet18-5c106cde.pth
[10/31 13:46:25] fvcore.common.file_io INFO: URL https://download.pytorch.org/models/resnet18-5c106cde.pth cached in /cfarhomes/shishira/.torch/fvcore_cache/models/resnet18-5c106cde.pth
[10/31 13:46:26] fvcore.common.checkpoint INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mproposal_generator.rpn_head.anchor_deltas.{weight, bias}[0m
  [34mroi_heads.box_head.fc1.{bias, weight}[0m
  [34mroi_heads.mask_head.predictor.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.conv1.weight[0m
  [34mbackbone.bottom_up.res3.0.conv2.weight[0m
  [34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv2.norm.{weight, bias}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{weight, bias}[0m
  [34mbackbone.fpn_lateral2.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.fpn_output5.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv2.weight[0m
  [34mroi_heads.mask_head.mask_fcn3.{weight, bias}[0m
  [34mbackbone.fpn_lateral5.{bias, weight}[0m
  [34mproposal_generator.rpn_head.conv.{weight, bias}[0m
  [34mbackbone.fpn_lateral3.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.fpn_output3.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv1.weight[0m
  [34mbackbone.fpn_lateral4.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.1.conv2.weight[0m
  [34mbackbone.bottom_up.res2.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.norm.{bias, weight}[0m
  [34mbackbone.fpn_output2.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res3.1.conv1.weight[0m
  [34mbackbone.bottom_up.res4.0.shortcut.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.conv1.norm.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn2.{weight, bias}[0m
  [34mbackbone.fpn_output4.{weight, bias}[0m
  [34mroi_heads.box_predictor.cls_score.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv2.weight[0m
  [34mroi_heads.mask_head.deconv.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv1.norm.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn4.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv1.weight[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.weight[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{0, 2, 1, 3, 4}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv1.weight[0m
  [34mbackbone.bottom_up.res5.1.conv2.norm.{weight, bias}[0m
  [34mroi_heads.box_head.fc2.{weight, bias}[0m
  [34mbackbone.bottom_up.stem.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.1.conv1.weight[0m
  [34mbackbone.bottom_up.stem.conv1.weight[0m
  [34mroi_heads.mask_head.mask_fcn1.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv2.weight[0m
  [34mbackbone.bottom_up.res4.1.conv1.weight[0m
  [34mbackbone.bottom_up.res2.1.conv2.weight[0m
  [34mbackbone.bottom_up.res2.0.conv1.weight[0m
  [34mbackbone.bottom_up.res5.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res5.0.conv2.weight[0m
  [34mbackbone.bottom_up.res4.0.conv2.weight[0m
[10/31 13:46:26] fvcore.common.checkpoint INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mconv1.weight[0m
  [35mbn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv1.weight[0m
  [35mlayer1.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv2.weight[0m
  [35mlayer1.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv1.weight[0m
  [35mlayer1.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv2.weight[0m
  [35mlayer1.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv1.weight[0m
  [35mlayer2.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv2.weight[0m
  [35mlayer2.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.downsample.0.weight[0m
  [35mlayer2.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv1.weight[0m
  [35mlayer2.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv2.weight[0m
  [35mlayer2.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv1.weight[0m
  [35mlayer3.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv2.weight[0m
  [35mlayer3.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.downsample.0.weight[0m
  [35mlayer3.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv1.weight[0m
  [35mlayer3.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv2.weight[0m
  [35mlayer3.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv1.weight[0m
  [35mlayer4.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv2.weight[0m
  [35mlayer4.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.downsample.0.weight[0m
  [35mlayer4.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv1.weight[0m
  [35mlayer4.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv2.weight[0m
  [35mlayer4.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mfc.{weight, bias}[0m
[10/31 13:48:34] detectron2 INFO: Rank of current process: 1. World size: 2
[10/31 13:48:35] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.3 (default, May 19 2020, 18:47:26) [GCC 7.3.0]
numpy                   1.19.1
detectron2              0.2.1 @/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 5.4
CUDA compiler           not available
detectron2 arch flags   /cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/_C.cpython-38-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.6.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /opt/common/cuda/cuda-10.0.130/lib64/
Pillow                  7.2.0
torchvision             0.7.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision
torchvision arch flags  /cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20201030
cv2                     4.4.0
----------------------  --------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[10/31 13:48:35] detectron2 INFO: Command line arguments: Namespace(config_file='configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml', dist_url='tcp://127.0.0.1:63010', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.MASK_ON', 'True', 'SOLVER.BASE_LR', '0.015', 'OUTPUT_DIR', 'temp'], resume=False)
[10/31 13:48:35] detectron2 INFO: Contents of args.config_file=configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml:
_BASE_: "../Base-RCNN-FPN.yaml"
MODEL:
  WEIGHTS: "https://download.pytorch.org/models/resnet18-5c106cde.pth"
  MASK_ON: True
  RESNETS:
    DEPTH: 18
    RES2_OUT_CHANNELS: 64
# DATASETS:
#   TRAIN: ("coco_2017_val",)
#   TEST: ("coco_2017_val",) #("coco_2017_test-dev",)
SOLVER:
  BASE_LR: 0.02
  CHECKPOINT_PERIOD: 7330
  # IMS_PER_BATCH: 24
  # STEPS: (40000, 53500)
  # MAX_ITER: 60000
  # WARMUP_FACTOR: 5e-4
  # WARMUP_ITERS: 2000
OUTPUT_DIR: output/faster_r18_fpn

[10/31 13:48:35] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32], [64], [128], [256], [512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 18
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 64
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: 
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://download.pytorch.org/models/resnet18-5c106cde.pth
OUTPUT_DIR: temp
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.015
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 7330
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[10/31 13:48:35] detectron2.utils.env INFO: Using a generated random seed 35179819
[10/31 13:48:35] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten()
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[10/31 13:48:55] detectron2.data.datasets.coco INFO: Loading datasets/coco/annotations/instances_train2017.json takes 20.10 seconds.
[10/31 13:48:57] detectron2.data.datasets.coco INFO: Loaded 118287 images in COCO format from datasets/coco/annotations/instances_train2017.json
[10/31 13:49:04] detectron2.data.build INFO: Removed 1021 images with no usable annotations. 117266 images left.
[10/31 13:49:10] detectron2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 257253       |   bicycle    | 7056         |      car      | 43533        |
|  motorcycle   | 8654         |   airplane   | 5129         |      bus      | 6061         |
|     train     | 4570         |    truck     | 9970         |     boat      | 10576        |
| traffic light | 12842        | fire hydrant | 1865         |   stop sign   | 1983         |
| parking meter | 1283         |    bench     | 9820         |     bird      | 10542        |
|      cat      | 4766         |     dog      | 5500         |     horse     | 6567         |
|     sheep     | 9223         |     cow      | 8014         |   elephant    | 5484         |
|     bear      | 1294         |    zebra     | 5269         |    giraffe    | 5128         |
|   backpack    | 8714         |   umbrella   | 11265        |    handbag    | 12342        |
|      tie      | 6448         |   suitcase   | 6112         |    frisbee    | 2681         |
|     skis      | 6623         |  snowboard   | 2681         |  sports ball  | 6299         |
|     kite      | 8802         | baseball bat | 3273         | baseball gl.. | 3747         |
|  skateboard   | 5536         |  surfboard   | 6095         | tennis racket | 4807         |
|    bottle     | 24070        |  wine glass  | 7839         |      cup      | 20574        |
|     fork      | 5474         |    knife     | 7760         |     spoon     | 6159         |
|     bowl      | 14323        |    banana    | 9195         |     apple     | 5776         |
|   sandwich    | 4356         |    orange    | 6302         |   broccoli    | 7261         |
|    carrot     | 7758         |   hot dog    | 2884         |     pizza     | 5807         |
|     donut     | 7005         |     cake     | 6296         |     chair     | 38073        |
|     couch     | 5779         | potted plant | 8631         |      bed      | 4192         |
| dining table  | 15695        |    toilet    | 4149         |      tv       | 5803         |
|    laptop     | 4960         |    mouse     | 2261         |    remote     | 5700         |
|   keyboard    | 2854         |  cell phone  | 6422         |   microwave   | 1672         |
|     oven      | 3334         |   toaster    | 225          |     sink      | 5609         |
| refrigerator  | 2634         |     book     | 24077        |     clock     | 6320         |
|     vase      | 6577         |   scissors   | 1464         |  teddy bear   | 4729         |
|  hair drier   | 198          |  toothbrush  | 1945         |               |              |
|     total     | 849949       |              |              |               |              |[0m
[10/31 13:49:10] detectron2.data.common INFO: Serializing 117266 elements to byte tensors and concatenating them all ...
[10/31 13:49:14] detectron2.data.common INFO: Serialized dataset takes 451.21 MiB
[10/31 13:49:14] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[10/31 13:49:14] detectron2.data.build INFO: Using training sampler TrainingSampler
[10/31 13:49:16] fvcore.common.checkpoint INFO: Loading checkpoint from https://download.pytorch.org/models/resnet18-5c106cde.pth
[10/31 13:49:16] fvcore.common.file_io INFO: URL https://download.pytorch.org/models/resnet18-5c106cde.pth cached in /cfarhomes/shishira/.torch/fvcore_cache/models/resnet18-5c106cde.pth
[10/31 13:49:16] fvcore.common.checkpoint INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mbackbone.bottom_up.res2.0.conv2.weight[0m
  [34mbackbone.bottom_up.res5.0.conv1.weight[0m
  [34mroi_heads.mask_head.mask_fcn1.{weight, bias}[0m
  [34mbackbone.fpn_output5.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv2.weight[0m
  [34mroi_heads.box_predictor.cls_score.{weight, bias}[0m
  [34mroi_heads.box_head.fc1.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn4.{bias, weight}[0m
  [34mbackbone.bottom_up.stem.conv1.weight[0m
  [34mbackbone.bottom_up.res4.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv2.weight[0m
  [34mbackbone.bottom_up.res3.0.conv1.weight[0m
  [34mbackbone.bottom_up.res2.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.fpn_lateral2.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv1.weight[0m
  [34mbackbone.bottom_up.res4.1.conv1.weight[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.{weight, bias}[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{2, 4, 0, 3, 1}[0m
  [34mbackbone.bottom_up.res5.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.fpn_output3.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.conv2.weight[0m
  [34mroi_heads.mask_head.mask_fcn2.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.fpn_output2.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv2.weight[0m
  [34mbackbone.bottom_up.res3.0.shortcut.norm.{weight, bias}[0m
  [34mbackbone.fpn_lateral4.{bias, weight}[0m
  [34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv2.norm.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn3.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.fpn_output4.{weight, bias}[0m
  [34mroi_heads.mask_head.deconv.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv1.weight[0m
  [34mbackbone.bottom_up.res4.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv2.weight[0m
  [34mbackbone.fpn_lateral5.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.conv1.norm.{weight, bias}[0m
  [34mroi_heads.mask_head.predictor.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv2.weight[0m
  [34mbackbone.bottom_up.stem.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv2.weight[0m
  [34mroi_heads.box_head.fc2.{weight, bias}[0m
  [34mbackbone.fpn_lateral3.{bias, weight}[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res4.0.shortcut.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res5.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.conv1.weight[0m
  [34mbackbone.bottom_up.res4.0.shortcut.weight[0m
  [34mproposal_generator.rpn_head.conv.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.conv1.weight[0m
  [34mproposal_generator.rpn_head.objectness_logits.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv1.weight[0m
  [34mbackbone.bottom_up.res4.1.conv2.norm.{bias, weight}[0m
[10/31 13:49:16] fvcore.common.checkpoint INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mconv1.weight[0m
  [35mbn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv1.weight[0m
  [35mlayer1.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv2.weight[0m
  [35mlayer1.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv1.weight[0m
  [35mlayer1.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv2.weight[0m
  [35mlayer1.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv1.weight[0m
  [35mlayer2.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv2.weight[0m
  [35mlayer2.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.downsample.0.weight[0m
  [35mlayer2.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv1.weight[0m
  [35mlayer2.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv2.weight[0m
  [35mlayer2.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv1.weight[0m
  [35mlayer3.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv2.weight[0m
  [35mlayer3.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.downsample.0.weight[0m
  [35mlayer3.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv1.weight[0m
  [35mlayer3.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv2.weight[0m
  [35mlayer3.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv1.weight[0m
  [35mlayer4.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv2.weight[0m
  [35mlayer4.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.downsample.0.weight[0m
  [35mlayer4.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv1.weight[0m
  [35mlayer4.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv2.weight[0m
  [35mlayer4.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mfc.{weight, bias}[0m
[10/31 13:49:52] detectron2 INFO: Rank of current process: 1. World size: 2
[10/31 13:49:53] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.3 (default, May 19 2020, 18:47:26) [GCC 7.3.0]
numpy                   1.19.1
detectron2              0.2.1 @/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 5.4
CUDA compiler           not available
detectron2 arch flags   /cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/_C.cpython-38-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.6.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /opt/common/cuda/cuda-10.0.130/lib64/
Pillow                  7.2.0
torchvision             0.7.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision
torchvision arch flags  /cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20201030
cv2                     4.4.0
----------------------  --------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[10/31 13:49:53] detectron2 INFO: Command line arguments: Namespace(config_file='configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml', dist_url='tcp://127.0.0.1:63010', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.MASK_ON', 'True', 'SOLVER.BASE_LR', '0.015', 'OUTPUT_DIR', 'temp'], resume=False)
[10/31 13:49:53] detectron2 INFO: Contents of args.config_file=configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml:
_BASE_: "../Base-RCNN-FPN.yaml"
MODEL:
  WEIGHTS: "https://download.pytorch.org/models/resnet18-5c106cde.pth"
  MASK_ON: True
  RESNETS:
    DEPTH: 18
    RES2_OUT_CHANNELS: 64
# DATASETS:
#   TRAIN: ("coco_2017_val",)
#   TEST: ("coco_2017_val",) #("coco_2017_test-dev",)
SOLVER:
  BASE_LR: 0.02
  CHECKPOINT_PERIOD: 7330
  # IMS_PER_BATCH: 24
  # STEPS: (40000, 53500)
  # MAX_ITER: 60000
  # WARMUP_FACTOR: 5e-4
  # WARMUP_ITERS: 2000
OUTPUT_DIR: output/faster_r18_fpn

[10/31 13:49:53] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32], [64], [128], [256], [512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 18
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 64
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: 
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://download.pytorch.org/models/resnet18-5c106cde.pth
OUTPUT_DIR: temp
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.015
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 7330
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[10/31 13:49:53] detectron2.utils.env INFO: Using a generated random seed 53522859
[10/31 13:49:54] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten()
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[10/31 13:50:13] detectron2.data.datasets.coco INFO: Loading datasets/coco/annotations/instances_train2017.json takes 19.68 seconds.
[10/31 13:50:14] detectron2.data.datasets.coco INFO: Loaded 118287 images in COCO format from datasets/coco/annotations/instances_train2017.json
[10/31 13:50:22] detectron2.data.build INFO: Removed 1021 images with no usable annotations. 117266 images left.
[10/31 13:50:27] detectron2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 257253       |   bicycle    | 7056         |      car      | 43533        |
|  motorcycle   | 8654         |   airplane   | 5129         |      bus      | 6061         |
|     train     | 4570         |    truck     | 9970         |     boat      | 10576        |
| traffic light | 12842        | fire hydrant | 1865         |   stop sign   | 1983         |
| parking meter | 1283         |    bench     | 9820         |     bird      | 10542        |
|      cat      | 4766         |     dog      | 5500         |     horse     | 6567         |
|     sheep     | 9223         |     cow      | 8014         |   elephant    | 5484         |
|     bear      | 1294         |    zebra     | 5269         |    giraffe    | 5128         |
|   backpack    | 8714         |   umbrella   | 11265        |    handbag    | 12342        |
|      tie      | 6448         |   suitcase   | 6112         |    frisbee    | 2681         |
|     skis      | 6623         |  snowboard   | 2681         |  sports ball  | 6299         |
|     kite      | 8802         | baseball bat | 3273         | baseball gl.. | 3747         |
|  skateboard   | 5536         |  surfboard   | 6095         | tennis racket | 4807         |
|    bottle     | 24070        |  wine glass  | 7839         |      cup      | 20574        |
|     fork      | 5474         |    knife     | 7760         |     spoon     | 6159         |
|     bowl      | 14323        |    banana    | 9195         |     apple     | 5776         |
|   sandwich    | 4356         |    orange    | 6302         |   broccoli    | 7261         |
|    carrot     | 7758         |   hot dog    | 2884         |     pizza     | 5807         |
|     donut     | 7005         |     cake     | 6296         |     chair     | 38073        |
|     couch     | 5779         | potted plant | 8631         |      bed      | 4192         |
| dining table  | 15695        |    toilet    | 4149         |      tv       | 5803         |
|    laptop     | 4960         |    mouse     | 2261         |    remote     | 5700         |
|   keyboard    | 2854         |  cell phone  | 6422         |   microwave   | 1672         |
|     oven      | 3334         |   toaster    | 225          |     sink      | 5609         |
| refrigerator  | 2634         |     book     | 24077        |     clock     | 6320         |
|     vase      | 6577         |   scissors   | 1464         |  teddy bear   | 4729         |
|  hair drier   | 198          |  toothbrush  | 1945         |               |              |
|     total     | 849949       |              |              |               |              |[0m
[10/31 13:50:27] detectron2.data.common INFO: Serializing 117266 elements to byte tensors and concatenating them all ...
[10/31 13:50:31] detectron2.data.common INFO: Serialized dataset takes 451.21 MiB
[10/31 13:50:31] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[10/31 13:50:31] detectron2.data.build INFO: Using training sampler TrainingSampler
[10/31 13:50:35] fvcore.common.checkpoint INFO: Loading checkpoint from https://download.pytorch.org/models/resnet18-5c106cde.pth
[10/31 13:50:35] fvcore.common.file_io INFO: URL https://download.pytorch.org/models/resnet18-5c106cde.pth cached in /cfarhomes/shishira/.torch/fvcore_cache/models/resnet18-5c106cde.pth
[10/31 13:50:35] fvcore.common.checkpoint INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mbackbone.bottom_up.res2.1.conv1.norm.{bias, weight}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.fpn_lateral2.{bias, weight}[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{3, 0, 2, 4, 1}[0m
  [34mbackbone.bottom_up.res4.0.conv2.weight[0m
  [34mbackbone.bottom_up.res3.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res4.1.conv2.weight[0m
  [34mbackbone.bottom_up.res5.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.fpn_lateral3.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.shortcut.weight[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{weight, bias}[0m
  [34mbackbone.fpn_lateral4.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv1.weight[0m
  [34mbackbone.bottom_up.res3.1.conv1.weight[0m
  [34mbackbone.bottom_up.res4.0.conv1.norm.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn4.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv1.norm.{bias, weight}[0m
  [34mroi_heads.box_predictor.cls_score.{weight, bias}[0m
  [34mroi_heads.mask_head.deconv.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv2.weight[0m
  [34mbackbone.bottom_up.res4.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.fpn_output4.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv2.norm.{weight, bias}[0m
  [34mroi_heads.box_head.fc1.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv1.weight[0m
  [34mbackbone.bottom_up.res3.0.conv2.weight[0m
  [34mbackbone.fpn_lateral5.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.fpn_output3.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv1.weight[0m
  [34mbackbone.bottom_up.res4.0.shortcut.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv1.norm.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn3.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.stem.conv1.weight[0m
  [34mroi_heads.box_predictor.bbox_pred.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv1.weight[0m
  [34mbackbone.bottom_up.res4.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.stem.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.conv2.norm.{bias, weight}[0m
  [34mroi_heads.box_head.fc2.{bias, weight}[0m
  [34mproposal_generator.rpn_head.conv.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.1.conv1.weight[0m
  [34mbackbone.bottom_up.res2.0.conv2.weight[0m
  [34mbackbone.fpn_output5.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.weight[0m
  [34mroi_heads.mask_head.mask_fcn2.{weight, bias}[0m
  [34mroi_heads.mask_head.predictor.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.conv1.weight[0m
  [34mbackbone.fpn_output2.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv2.weight[0m
  [34mbackbone.bottom_up.res5.0.conv2.weight[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn1.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv2.weight[0m
  [34mbackbone.bottom_up.res5.1.conv1.weight[0m
[10/31 13:50:35] fvcore.common.checkpoint INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mconv1.weight[0m
  [35mbn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv1.weight[0m
  [35mlayer1.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv2.weight[0m
  [35mlayer1.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv1.weight[0m
  [35mlayer1.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv2.weight[0m
  [35mlayer1.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv1.weight[0m
  [35mlayer2.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv2.weight[0m
  [35mlayer2.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.downsample.0.weight[0m
  [35mlayer2.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv1.weight[0m
  [35mlayer2.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv2.weight[0m
  [35mlayer2.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv1.weight[0m
  [35mlayer3.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv2.weight[0m
  [35mlayer3.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.downsample.0.weight[0m
  [35mlayer3.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv1.weight[0m
  [35mlayer3.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv2.weight[0m
  [35mlayer3.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv1.weight[0m
  [35mlayer4.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv2.weight[0m
  [35mlayer4.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.downsample.0.weight[0m
  [35mlayer4.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv1.weight[0m
  [35mlayer4.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv2.weight[0m
  [35mlayer4.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mfc.{weight, bias}[0m
[10/31 13:50:59] detectron2 INFO: Rank of current process: 1. World size: 2
[10/31 13:51:00] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.3 (default, May 19 2020, 18:47:26) [GCC 7.3.0]
numpy                   1.19.1
detectron2              0.2.1 @/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 5.4
CUDA compiler           not available
detectron2 arch flags   /cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/_C.cpython-38-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.6.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /opt/common/cuda/cuda-10.0.130/lib64/
Pillow                  7.2.0
torchvision             0.7.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision
torchvision arch flags  /cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20201030
cv2                     4.4.0
----------------------  --------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[10/31 13:51:00] detectron2 INFO: Command line arguments: Namespace(config_file='configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml', dist_url='tcp://127.0.0.1:63010', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.MASK_ON', 'True', 'SOLVER.BASE_LR', '0.015', 'OUTPUT_DIR', 'temp'], resume=False)
[10/31 13:51:00] detectron2 INFO: Contents of args.config_file=configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml:
_BASE_: "../Base-RCNN-FPN.yaml"
MODEL:
  WEIGHTS: "https://download.pytorch.org/models/resnet18-5c106cde.pth"
  MASK_ON: True
  RESNETS:
    DEPTH: 18
    RES2_OUT_CHANNELS: 64
# DATASETS:
#   TRAIN: ("coco_2017_val",)
#   TEST: ("coco_2017_val",) #("coco_2017_test-dev",)
SOLVER:
  BASE_LR: 0.02
  CHECKPOINT_PERIOD: 7330
  # IMS_PER_BATCH: 24
  # STEPS: (40000, 53500)
  # MAX_ITER: 60000
  # WARMUP_FACTOR: 5e-4
  # WARMUP_ITERS: 2000
OUTPUT_DIR: output/faster_r18_fpn

[10/31 13:51:00] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32], [64], [128], [256], [512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 18
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 64
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: 
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://download.pytorch.org/models/resnet18-5c106cde.pth
OUTPUT_DIR: temp
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.015
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 7330
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[10/31 13:51:00] detectron2.utils.env INFO: Using a generated random seed 863899
[10/31 13:51:01] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten()
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[10/31 13:51:21] detectron2.data.datasets.coco INFO: Loading datasets/coco/annotations/instances_train2017.json takes 19.95 seconds.
[10/31 13:51:22] detectron2.data.datasets.coco INFO: Loaded 118287 images in COCO format from datasets/coco/annotations/instances_train2017.json
[10/31 13:51:29] detectron2.data.build INFO: Removed 1021 images with no usable annotations. 117266 images left.
[10/31 13:51:35] detectron2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 257253       |   bicycle    | 7056         |      car      | 43533        |
|  motorcycle   | 8654         |   airplane   | 5129         |      bus      | 6061         |
|     train     | 4570         |    truck     | 9970         |     boat      | 10576        |
| traffic light | 12842        | fire hydrant | 1865         |   stop sign   | 1983         |
| parking meter | 1283         |    bench     | 9820         |     bird      | 10542        |
|      cat      | 4766         |     dog      | 5500         |     horse     | 6567         |
|     sheep     | 9223         |     cow      | 8014         |   elephant    | 5484         |
|     bear      | 1294         |    zebra     | 5269         |    giraffe    | 5128         |
|   backpack    | 8714         |   umbrella   | 11265        |    handbag    | 12342        |
|      tie      | 6448         |   suitcase   | 6112         |    frisbee    | 2681         |
|     skis      | 6623         |  snowboard   | 2681         |  sports ball  | 6299         |
|     kite      | 8802         | baseball bat | 3273         | baseball gl.. | 3747         |
|  skateboard   | 5536         |  surfboard   | 6095         | tennis racket | 4807         |
|    bottle     | 24070        |  wine glass  | 7839         |      cup      | 20574        |
|     fork      | 5474         |    knife     | 7760         |     spoon     | 6159         |
|     bowl      | 14323        |    banana    | 9195         |     apple     | 5776         |
|   sandwich    | 4356         |    orange    | 6302         |   broccoli    | 7261         |
|    carrot     | 7758         |   hot dog    | 2884         |     pizza     | 5807         |
|     donut     | 7005         |     cake     | 6296         |     chair     | 38073        |
|     couch     | 5779         | potted plant | 8631         |      bed      | 4192         |
| dining table  | 15695        |    toilet    | 4149         |      tv       | 5803         |
|    laptop     | 4960         |    mouse     | 2261         |    remote     | 5700         |
|   keyboard    | 2854         |  cell phone  | 6422         |   microwave   | 1672         |
|     oven      | 3334         |   toaster    | 225          |     sink      | 5609         |
| refrigerator  | 2634         |     book     | 24077        |     clock     | 6320         |
|     vase      | 6577         |   scissors   | 1464         |  teddy bear   | 4729         |
|  hair drier   | 198          |  toothbrush  | 1945         |               |              |
|     total     | 849949       |              |              |               |              |[0m
[10/31 13:51:35] detectron2.data.common INFO: Serializing 117266 elements to byte tensors and concatenating them all ...
[10/31 13:51:39] detectron2.data.common INFO: Serialized dataset takes 451.21 MiB
[10/31 13:51:39] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[10/31 13:51:39] detectron2.data.build INFO: Using training sampler TrainingSampler
[10/31 13:51:41] fvcore.common.checkpoint INFO: Loading checkpoint from https://download.pytorch.org/models/resnet18-5c106cde.pth
[10/31 13:51:41] fvcore.common.file_io INFO: URL https://download.pytorch.org/models/resnet18-5c106cde.pth cached in /cfarhomes/shishira/.torch/fvcore_cache/models/resnet18-5c106cde.pth
[10/31 13:51:41] fvcore.common.checkpoint INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mbackbone.bottom_up.res4.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.norm.{weight, bias}[0m
  [34mbackbone.fpn_lateral2.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.fpn_output3.{weight, bias}[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{0, 2, 4, 1, 3}[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv1.weight[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{weight, bias}[0m
  [34mproposal_generator.rpn_head.conv.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv2.weight[0m
  [34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.conv2.norm.{bias, weight}[0m
  [34mroi_heads.mask_head.deconv.{weight, bias}[0m
  [34mbackbone.fpn_output5.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.conv2.norm.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn4.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv2.weight[0m
  [34mroi_heads.box_head.fc1.{weight, bias}[0m
  [34mbackbone.fpn_lateral4.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.fpn_output4.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv2.weight[0m
  [34mbackbone.bottom_up.res5.1.conv2.norm.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn1.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.fpn_output2.{bias, weight}[0m
  [34mbackbone.fpn_lateral5.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.conv1.weight[0m
  [34mbackbone.bottom_up.res3.0.shortcut.norm.{weight, bias}[0m
  [34mroi_heads.box_predictor.bbox_pred.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv2.norm.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn2.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv1.weight[0m
  [34mbackbone.bottom_up.res3.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.fpn_lateral3.{weight, bias}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv1.weight[0m
  [34mroi_heads.mask_head.mask_fcn3.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv2.weight[0m
  [34mbackbone.bottom_up.res4.0.shortcut.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.stem.conv1.norm.{weight, bias}[0m
  [34mroi_heads.box_head.fc2.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res2.0.conv2.weight[0m
  [34mbackbone.bottom_up.res3.1.conv1.weight[0m
  [34mbackbone.bottom_up.res3.0.conv2.weight[0m
  [34mbackbone.bottom_up.res3.0.conv1.weight[0m
  [34mbackbone.bottom_up.res4.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res5.1.conv1.weight[0m
  [34mbackbone.bottom_up.res5.1.conv1.norm.{bias, weight}[0m
  [34mroi_heads.mask_head.predictor.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv2.weight[0m
  [34mbackbone.bottom_up.res5.0.conv1.weight[0m
  [34mbackbone.bottom_up.stem.conv1.weight[0m
  [34mbackbone.bottom_up.res4.0.conv2.weight[0m
[10/31 13:51:41] fvcore.common.checkpoint INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mconv1.weight[0m
  [35mbn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv1.weight[0m
  [35mlayer1.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv2.weight[0m
  [35mlayer1.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv1.weight[0m
  [35mlayer1.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv2.weight[0m
  [35mlayer1.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv1.weight[0m
  [35mlayer2.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv2.weight[0m
  [35mlayer2.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.downsample.0.weight[0m
  [35mlayer2.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv1.weight[0m
  [35mlayer2.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv2.weight[0m
  [35mlayer2.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv1.weight[0m
  [35mlayer3.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv2.weight[0m
  [35mlayer3.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.downsample.0.weight[0m
  [35mlayer3.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv1.weight[0m
  [35mlayer3.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv2.weight[0m
  [35mlayer3.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv1.weight[0m
  [35mlayer4.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv2.weight[0m
  [35mlayer4.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.downsample.0.weight[0m
  [35mlayer4.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv1.weight[0m
  [35mlayer4.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv2.weight[0m
  [35mlayer4.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mfc.{weight, bias}[0m
[10/31 13:53:16] detectron2 INFO: Rank of current process: 1. World size: 2
[10/31 13:53:17] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.3 (default, May 19 2020, 18:47:26) [GCC 7.3.0]
numpy                   1.19.1
detectron2              0.2.1 @/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 5.4
CUDA compiler           not available
detectron2 arch flags   /cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/_C.cpython-38-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.6.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /opt/common/cuda/cuda-10.0.130/lib64/
Pillow                  7.2.0
torchvision             0.7.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision
torchvision arch flags  /cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20201030
cv2                     4.4.0
----------------------  --------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[10/31 13:53:17] detectron2 INFO: Command line arguments: Namespace(config_file='configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml', dist_url='tcp://127.0.0.1:63010', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.MASK_ON', 'True', 'SOLVER.BASE_LR', '0.015', 'OUTPUT_DIR', 'temp'], resume=False)
[10/31 13:53:17] detectron2 INFO: Contents of args.config_file=configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml:
_BASE_: "../Base-RCNN-FPN.yaml"
MODEL:
  WEIGHTS: "https://download.pytorch.org/models/resnet18-5c106cde.pth"
  MASK_ON: True
  RESNETS:
    DEPTH: 18
    RES2_OUT_CHANNELS: 64
# DATASETS:
#   TRAIN: ("coco_2017_val",)
#   TEST: ("coco_2017_val",) #("coco_2017_test-dev",)
SOLVER:
  BASE_LR: 0.02
  CHECKPOINT_PERIOD: 7330
  # IMS_PER_BATCH: 24
  # STEPS: (40000, 53500)
  # MAX_ITER: 60000
  # WARMUP_FACTOR: 5e-4
  # WARMUP_ITERS: 2000
OUTPUT_DIR: output/faster_r18_fpn

[10/31 13:53:17] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32], [64], [128], [256], [512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 18
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 64
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: 
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://download.pytorch.org/models/resnet18-5c106cde.pth
OUTPUT_DIR: temp
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.015
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 7330
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[10/31 13:53:17] detectron2.utils.env INFO: Using a generated random seed 17444173
[10/31 13:53:18] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten()
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[10/31 13:53:37] detectron2.data.datasets.coco INFO: Loading datasets/coco/annotations/instances_train2017.json takes 19.85 seconds.
[10/31 13:53:39] detectron2.data.datasets.coco INFO: Loaded 118287 images in COCO format from datasets/coco/annotations/instances_train2017.json
[10/31 13:53:46] detectron2.data.build INFO: Removed 1021 images with no usable annotations. 117266 images left.
[10/31 13:53:53] detectron2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 257253       |   bicycle    | 7056         |      car      | 43533        |
|  motorcycle   | 8654         |   airplane   | 5129         |      bus      | 6061         |
|     train     | 4570         |    truck     | 9970         |     boat      | 10576        |
| traffic light | 12842        | fire hydrant | 1865         |   stop sign   | 1983         |
| parking meter | 1283         |    bench     | 9820         |     bird      | 10542        |
|      cat      | 4766         |     dog      | 5500         |     horse     | 6567         |
|     sheep     | 9223         |     cow      | 8014         |   elephant    | 5484         |
|     bear      | 1294         |    zebra     | 5269         |    giraffe    | 5128         |
|   backpack    | 8714         |   umbrella   | 11265        |    handbag    | 12342        |
|      tie      | 6448         |   suitcase   | 6112         |    frisbee    | 2681         |
|     skis      | 6623         |  snowboard   | 2681         |  sports ball  | 6299         |
|     kite      | 8802         | baseball bat | 3273         | baseball gl.. | 3747         |
|  skateboard   | 5536         |  surfboard   | 6095         | tennis racket | 4807         |
|    bottle     | 24070        |  wine glass  | 7839         |      cup      | 20574        |
|     fork      | 5474         |    knife     | 7760         |     spoon     | 6159         |
|     bowl      | 14323        |    banana    | 9195         |     apple     | 5776         |
|   sandwich    | 4356         |    orange    | 6302         |   broccoli    | 7261         |
|    carrot     | 7758         |   hot dog    | 2884         |     pizza     | 5807         |
|     donut     | 7005         |     cake     | 6296         |     chair     | 38073        |
|     couch     | 5779         | potted plant | 8631         |      bed      | 4192         |
| dining table  | 15695        |    toilet    | 4149         |      tv       | 5803         |
|    laptop     | 4960         |    mouse     | 2261         |    remote     | 5700         |
|   keyboard    | 2854         |  cell phone  | 6422         |   microwave   | 1672         |
|     oven      | 3334         |   toaster    | 225          |     sink      | 5609         |
| refrigerator  | 2634         |     book     | 24077        |     clock     | 6320         |
|     vase      | 6577         |   scissors   | 1464         |  teddy bear   | 4729         |
|  hair drier   | 198          |  toothbrush  | 1945         |               |              |
|     total     | 849949       |              |              |               |              |[0m
[10/31 13:53:53] detectron2.data.common INFO: Serializing 117266 elements to byte tensors and concatenating them all ...
[10/31 13:53:58] detectron2.data.common INFO: Serialized dataset takes 451.21 MiB
[10/31 13:53:58] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[10/31 13:53:58] detectron2.data.build INFO: Using training sampler TrainingSampler
[10/31 13:54:00] fvcore.common.checkpoint INFO: Loading checkpoint from https://download.pytorch.org/models/resnet18-5c106cde.pth
[10/31 13:54:00] fvcore.common.file_io INFO: URL https://download.pytorch.org/models/resnet18-5c106cde.pth cached in /cfarhomes/shishira/.torch/fvcore_cache/models/resnet18-5c106cde.pth
[10/31 13:54:00] fvcore.common.checkpoint INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mbackbone.bottom_up.res3.0.shortcut.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.conv2.norm.{weight, bias}[0m
  [34mroi_heads.box_head.fc1.{weight, bias}[0m
  [34mbackbone.fpn_output2.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn1.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.conv2.norm.{bias, weight}[0m
  [34mroi_heads.mask_head.predictor.{bias, weight}[0m
  [34mproposal_generator.rpn_head.conv.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv2.weight[0m
  [34mroi_heads.mask_head.mask_fcn2.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv1.weight[0m
  [34mbackbone.bottom_up.stem.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv1.weight[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{4, 2, 3, 1, 0}[0m
  [34mroi_heads.mask_head.deconv.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.fpn_lateral4.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv1.norm.{weight, bias}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
  [34mroi_heads.box_predictor.cls_score.{weight, bias}[0m
  [34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv1.weight[0m
  [34mbackbone.bottom_up.res5.1.conv2.norm.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn3.{weight, bias}[0m
  [34mbackbone.fpn_output5.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv1.weight[0m
  [34mbackbone.bottom_up.res5.1.conv1.weight[0m
  [34mbackbone.bottom_up.res4.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res5.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res5.0.conv1.weight[0m
  [34mbackbone.bottom_up.res3.0.conv2.weight[0m
  [34mbackbone.bottom_up.res5.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.fpn_lateral2.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv2.norm.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn4.{bias, weight}[0m
  [34mroi_heads.box_head.fc2.{bias, weight}[0m
  [34mbackbone.fpn_lateral5.{weight, bias}[0m
  [34mbackbone.bottom_up.stem.conv1.weight[0m
  [34mbackbone.fpn_output4.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv2.weight[0m
  [34mbackbone.bottom_up.res5.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.fpn_lateral3.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv2.weight[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.fpn_output3.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv2.weight[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv1.weight[0m
  [34mbackbone.bottom_up.res2.1.conv2.weight[0m
  [34mbackbone.bottom_up.res3.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv2.weight[0m
  [34mbackbone.bottom_up.res4.0.shortcut.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv2.weight[0m
  [34mbackbone.bottom_up.res4.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res2.1.conv1.weight[0m
[10/31 13:54:00] fvcore.common.checkpoint INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mconv1.weight[0m
  [35mbn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv1.weight[0m
  [35mlayer1.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv2.weight[0m
  [35mlayer1.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv1.weight[0m
  [35mlayer1.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv2.weight[0m
  [35mlayer1.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv1.weight[0m
  [35mlayer2.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv2.weight[0m
  [35mlayer2.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.downsample.0.weight[0m
  [35mlayer2.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv1.weight[0m
  [35mlayer2.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv2.weight[0m
  [35mlayer2.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv1.weight[0m
  [35mlayer3.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv2.weight[0m
  [35mlayer3.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.downsample.0.weight[0m
  [35mlayer3.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv1.weight[0m
  [35mlayer3.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv2.weight[0m
  [35mlayer3.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv1.weight[0m
  [35mlayer4.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv2.weight[0m
  [35mlayer4.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.downsample.0.weight[0m
  [35mlayer4.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv1.weight[0m
  [35mlayer4.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv2.weight[0m
  [35mlayer4.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mfc.{weight, bias}[0m
[10/31 13:56:13] detectron2 INFO: Rank of current process: 1. World size: 2
[10/31 13:56:14] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.3 (default, May 19 2020, 18:47:26) [GCC 7.3.0]
numpy                   1.19.1
detectron2              0.2.1 @/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 5.4
CUDA compiler           not available
detectron2 arch flags   /cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/_C.cpython-38-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.6.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /opt/common/cuda/cuda-10.0.130/lib64/
Pillow                  7.2.0
torchvision             0.7.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision
torchvision arch flags  /cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20201030
cv2                     4.4.0
----------------------  --------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[10/31 13:56:14] detectron2 INFO: Command line arguments: Namespace(config_file='configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml', dist_url='tcp://127.0.0.1:63010', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.MASK_ON', 'True', 'SOLVER.BASE_LR', '0.015', 'OUTPUT_DIR', 'temp'], resume=False)
[10/31 13:56:14] detectron2 INFO: Contents of args.config_file=configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml:
_BASE_: "../Base-RCNN-FPN.yaml"
MODEL:
  WEIGHTS: "https://download.pytorch.org/models/resnet18-5c106cde.pth"
  MASK_ON: True
  RESNETS:
    DEPTH: 18
    RES2_OUT_CHANNELS: 64
# DATASETS:
#   TRAIN: ("coco_2017_val",)
#   TEST: ("coco_2017_val",) #("coco_2017_test-dev",)
SOLVER:
  BASE_LR: 0.02
  CHECKPOINT_PERIOD: 7330
  # IMS_PER_BATCH: 24
  # STEPS: (40000, 53500)
  # MAX_ITER: 60000
  # WARMUP_FACTOR: 5e-4
  # WARMUP_ITERS: 2000
OUTPUT_DIR: output/faster_r18_fpn

[10/31 13:56:14] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32], [64], [128], [256], [512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 18
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 64
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: 
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://download.pytorch.org/models/resnet18-5c106cde.pth
OUTPUT_DIR: temp
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.015
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 7330
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[10/31 13:56:14] detectron2.utils.env INFO: Using a generated random seed 14767192
[10/31 13:56:15] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten()
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[10/31 13:56:35] detectron2.data.datasets.coco INFO: Loading datasets/coco/annotations/instances_train2017.json takes 20.14 seconds.
[10/31 13:56:36] detectron2.data.datasets.coco INFO: Loaded 118287 images in COCO format from datasets/coco/annotations/instances_train2017.json
[10/31 13:56:43] detectron2.data.build INFO: Removed 1021 images with no usable annotations. 117266 images left.
[10/31 13:56:49] detectron2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 257253       |   bicycle    | 7056         |      car      | 43533        |
|  motorcycle   | 8654         |   airplane   | 5129         |      bus      | 6061         |
|     train     | 4570         |    truck     | 9970         |     boat      | 10576        |
| traffic light | 12842        | fire hydrant | 1865         |   stop sign   | 1983         |
| parking meter | 1283         |    bench     | 9820         |     bird      | 10542        |
|      cat      | 4766         |     dog      | 5500         |     horse     | 6567         |
|     sheep     | 9223         |     cow      | 8014         |   elephant    | 5484         |
|     bear      | 1294         |    zebra     | 5269         |    giraffe    | 5128         |
|   backpack    | 8714         |   umbrella   | 11265        |    handbag    | 12342        |
|      tie      | 6448         |   suitcase   | 6112         |    frisbee    | 2681         |
|     skis      | 6623         |  snowboard   | 2681         |  sports ball  | 6299         |
|     kite      | 8802         | baseball bat | 3273         | baseball gl.. | 3747         |
|  skateboard   | 5536         |  surfboard   | 6095         | tennis racket | 4807         |
|    bottle     | 24070        |  wine glass  | 7839         |      cup      | 20574        |
|     fork      | 5474         |    knife     | 7760         |     spoon     | 6159         |
|     bowl      | 14323        |    banana    | 9195         |     apple     | 5776         |
|   sandwich    | 4356         |    orange    | 6302         |   broccoli    | 7261         |
|    carrot     | 7758         |   hot dog    | 2884         |     pizza     | 5807         |
|     donut     | 7005         |     cake     | 6296         |     chair     | 38073        |
|     couch     | 5779         | potted plant | 8631         |      bed      | 4192         |
| dining table  | 15695        |    toilet    | 4149         |      tv       | 5803         |
|    laptop     | 4960         |    mouse     | 2261         |    remote     | 5700         |
|   keyboard    | 2854         |  cell phone  | 6422         |   microwave   | 1672         |
|     oven      | 3334         |   toaster    | 225          |     sink      | 5609         |
| refrigerator  | 2634         |     book     | 24077        |     clock     | 6320         |
|     vase      | 6577         |   scissors   | 1464         |  teddy bear   | 4729         |
|  hair drier   | 198          |  toothbrush  | 1945         |               |              |
|     total     | 849949       |              |              |               |              |[0m
[10/31 13:56:49] detectron2.data.common INFO: Serializing 117266 elements to byte tensors and concatenating them all ...
[10/31 13:56:53] detectron2.data.common INFO: Serialized dataset takes 451.21 MiB
[10/31 13:56:53] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[10/31 13:56:53] detectron2.data.build INFO: Using training sampler TrainingSampler
[10/31 13:56:56] fvcore.common.checkpoint INFO: Loading checkpoint from https://download.pytorch.org/models/resnet18-5c106cde.pth
[10/31 13:56:56] fvcore.common.file_io INFO: URL https://download.pytorch.org/models/resnet18-5c106cde.pth cached in /cfarhomes/shishira/.torch/fvcore_cache/models/resnet18-5c106cde.pth
[10/31 13:56:56] fvcore.common.checkpoint INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mbackbone.bottom_up.res2.1.conv1.weight[0m
  [34mbackbone.fpn_lateral2.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv1.norm.{bias, weight}[0m
  [34mroi_heads.box_head.fc1.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv1.norm.{weight, bias}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{weight, bias}[0m
  [34mbackbone.fpn_output3.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn3.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.fpn_lateral4.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.stem.conv1.weight[0m
  [34mbackbone.bottom_up.stem.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.shortcut.norm.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn1.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv1.weight[0m
  [34mbackbone.fpn_output4.{weight, bias}[0m
  [34mroi_heads.mask_head.predictor.{bias, weight}[0m
  [34mroi_heads.box_head.fc2.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv1.weight[0m
  [34mbackbone.bottom_up.res3.1.conv1.weight[0m
  [34mroi_heads.mask_head.mask_fcn2.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res5.1.conv1.norm.{bias, weight}[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{2, 4, 3, 1, 0}[0m
  [34mbackbone.bottom_up.res4.1.conv1.weight[0m
  [34mbackbone.bottom_up.res4.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res2.0.conv2.weight[0m
  [34mroi_heads.box_predictor.cls_score.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv2.weight[0m
  [34mbackbone.fpn_lateral5.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv2.weight[0m
  [34mbackbone.bottom_up.res2.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.1.conv2.weight[0m
  [34mbackbone.fpn_output2.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.conv1.weight[0m
  [34mproposal_generator.rpn_head.conv.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.conv1.weight[0m
  [34mroi_heads.mask_head.deconv.{bias, weight}[0m
  [34mbackbone.fpn_output5.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv2.weight[0m
  [34mbackbone.bottom_up.res5.0.conv1.norm.{weight, bias}[0m
  [34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv2.weight[0m
  [34mbackbone.fpn_lateral3.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv1.weight[0m
  [34mbackbone.bottom_up.res2.1.conv2.weight[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn4.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv2.weight[0m
[10/31 13:56:56] fvcore.common.checkpoint INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mconv1.weight[0m
  [35mbn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv1.weight[0m
  [35mlayer1.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv2.weight[0m
  [35mlayer1.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv1.weight[0m
  [35mlayer1.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv2.weight[0m
  [35mlayer1.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv1.weight[0m
  [35mlayer2.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv2.weight[0m
  [35mlayer2.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.downsample.0.weight[0m
  [35mlayer2.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv1.weight[0m
  [35mlayer2.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv2.weight[0m
  [35mlayer2.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv1.weight[0m
  [35mlayer3.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv2.weight[0m
  [35mlayer3.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.downsample.0.weight[0m
  [35mlayer3.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv1.weight[0m
  [35mlayer3.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv2.weight[0m
  [35mlayer3.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv1.weight[0m
  [35mlayer4.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv2.weight[0m
  [35mlayer4.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.downsample.0.weight[0m
  [35mlayer4.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv1.weight[0m
  [35mlayer4.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv2.weight[0m
  [35mlayer4.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mfc.{weight, bias}[0m
[10/31 13:58:19] detectron2 INFO: Rank of current process: 1. World size: 2
[10/31 13:58:20] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.3 (default, May 19 2020, 18:47:26) [GCC 7.3.0]
numpy                   1.19.1
detectron2              0.2.1 @/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 5.4
CUDA compiler           not available
detectron2 arch flags   /cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/_C.cpython-38-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.6.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /opt/common/cuda/cuda-10.0.130/lib64/
Pillow                  7.2.0
torchvision             0.7.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision
torchvision arch flags  /cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20201030
cv2                     4.4.0
----------------------  --------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[10/31 13:58:20] detectron2 INFO: Command line arguments: Namespace(config_file='configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml', dist_url='tcp://127.0.0.1:63010', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.MASK_ON', 'True', 'SOLVER.BASE_LR', '0.015', 'OUTPUT_DIR', 'temp'], resume=False)
[10/31 13:58:20] detectron2 INFO: Contents of args.config_file=configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml:
_BASE_: "../Base-RCNN-FPN.yaml"
MODEL:
  WEIGHTS: "https://download.pytorch.org/models/resnet18-5c106cde.pth"
  MASK_ON: True
  RESNETS:
    DEPTH: 18
    RES2_OUT_CHANNELS: 64
# DATASETS:
#   TRAIN: ("coco_2017_val",)
#   TEST: ("coco_2017_val",) #("coco_2017_test-dev",)
SOLVER:
  BASE_LR: 0.02
  CHECKPOINT_PERIOD: 7330
  # IMS_PER_BATCH: 24
  # STEPS: (40000, 53500)
  # MAX_ITER: 60000
  # WARMUP_FACTOR: 5e-4
  # WARMUP_ITERS: 2000
OUTPUT_DIR: output/faster_r18_fpn

[10/31 13:58:20] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32], [64], [128], [256], [512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 18
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 64
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: 
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://download.pytorch.org/models/resnet18-5c106cde.pth
OUTPUT_DIR: temp
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.015
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 7330
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[10/31 13:58:20] detectron2.utils.env INFO: Using a generated random seed 20624117
[10/31 13:58:21] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten()
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[10/31 13:58:41] detectron2.data.datasets.coco INFO: Loading datasets/coco/annotations/instances_train2017.json takes 20.04 seconds.
[10/31 13:58:42] detectron2.data.datasets.coco INFO: Loaded 118287 images in COCO format from datasets/coco/annotations/instances_train2017.json
[10/31 13:58:49] detectron2.data.build INFO: Removed 1021 images with no usable annotations. 117266 images left.
[10/31 13:58:55] detectron2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 257253       |   bicycle    | 7056         |      car      | 43533        |
|  motorcycle   | 8654         |   airplane   | 5129         |      bus      | 6061         |
|     train     | 4570         |    truck     | 9970         |     boat      | 10576        |
| traffic light | 12842        | fire hydrant | 1865         |   stop sign   | 1983         |
| parking meter | 1283         |    bench     | 9820         |     bird      | 10542        |
|      cat      | 4766         |     dog      | 5500         |     horse     | 6567         |
|     sheep     | 9223         |     cow      | 8014         |   elephant    | 5484         |
|     bear      | 1294         |    zebra     | 5269         |    giraffe    | 5128         |
|   backpack    | 8714         |   umbrella   | 11265        |    handbag    | 12342        |
|      tie      | 6448         |   suitcase   | 6112         |    frisbee    | 2681         |
|     skis      | 6623         |  snowboard   | 2681         |  sports ball  | 6299         |
|     kite      | 8802         | baseball bat | 3273         | baseball gl.. | 3747         |
|  skateboard   | 5536         |  surfboard   | 6095         | tennis racket | 4807         |
|    bottle     | 24070        |  wine glass  | 7839         |      cup      | 20574        |
|     fork      | 5474         |    knife     | 7760         |     spoon     | 6159         |
|     bowl      | 14323        |    banana    | 9195         |     apple     | 5776         |
|   sandwich    | 4356         |    orange    | 6302         |   broccoli    | 7261         |
|    carrot     | 7758         |   hot dog    | 2884         |     pizza     | 5807         |
|     donut     | 7005         |     cake     | 6296         |     chair     | 38073        |
|     couch     | 5779         | potted plant | 8631         |      bed      | 4192         |
| dining table  | 15695        |    toilet    | 4149         |      tv       | 5803         |
|    laptop     | 4960         |    mouse     | 2261         |    remote     | 5700         |
|   keyboard    | 2854         |  cell phone  | 6422         |   microwave   | 1672         |
|     oven      | 3334         |   toaster    | 225          |     sink      | 5609         |
| refrigerator  | 2634         |     book     | 24077        |     clock     | 6320         |
|     vase      | 6577         |   scissors   | 1464         |  teddy bear   | 4729         |
|  hair drier   | 198          |  toothbrush  | 1945         |               |              |
|     total     | 849949       |              |              |               |              |[0m
[10/31 13:58:55] detectron2.data.common INFO: Serializing 117266 elements to byte tensors and concatenating them all ...
[10/31 13:58:59] detectron2.data.common INFO: Serialized dataset takes 451.21 MiB
[10/31 13:58:59] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[10/31 13:58:59] detectron2.data.build INFO: Using training sampler TrainingSampler
[10/31 13:59:01] fvcore.common.checkpoint INFO: Loading checkpoint from https://download.pytorch.org/models/resnet18-5c106cde.pth
[10/31 13:59:01] fvcore.common.file_io INFO: URL https://download.pytorch.org/models/resnet18-5c106cde.pth cached in /cfarhomes/shishira/.torch/fvcore_cache/models/resnet18-5c106cde.pth
[10/31 13:59:02] fvcore.common.checkpoint INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mbackbone.bottom_up.res3.1.conv2.norm.{weight, bias}[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{0, 2, 3, 1, 4}[0m
  [34mbackbone.bottom_up.res3.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.1.conv2.norm.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn2.{bias, weight}[0m
  [34mbackbone.fpn_lateral2.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv2.weight[0m
  [34mbackbone.bottom_up.res3.1.conv2.weight[0m
  [34mbackbone.bottom_up.stem.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.norm.{weight, bias}[0m
  [34mroi_heads.box_head.fc1.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.fpn_output4.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.shortcut.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.1.conv1.weight[0m
  [34mproposal_generator.rpn_head.conv.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv2.weight[0m
  [34mbackbone.bottom_up.res3.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv1.weight[0m
  [34mbackbone.bottom_up.res3.0.conv2.weight[0m
  [34mbackbone.fpn_output3.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.weight[0m
  [34mroi_heads.mask_head.mask_fcn4.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn1.{weight, bias}[0m
  [34mbackbone.fpn_lateral4.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.conv2.weight[0m
  [34mbackbone.bottom_up.res4.0.conv2.norm.{weight, bias}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{weight, bias}[0m
  [34mroi_heads.mask_head.deconv.{bias, weight}[0m
  [34mbackbone.fpn_lateral5.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.fpn_lateral3.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.conv1.weight[0m
  [34mroi_heads.box_head.fc2.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv1.weight[0m
  [34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv2.weight[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv1.weight[0m
  [34mbackbone.bottom_up.stem.conv1.weight[0m
  [34mbackbone.fpn_output2.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv1.weight[0m
  [34mbackbone.bottom_up.res3.0.conv1.weight[0m
  [34mbackbone.bottom_up.res3.1.conv1.weight[0m
  [34mroi_heads.mask_head.mask_fcn3.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.conv2.weight[0m
  [34mroi_heads.mask_head.predictor.{bias, weight}[0m
  [34mbackbone.fpn_output5.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.weight[0m
  [34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv2.weight[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.shortcut.weight[0m
[10/31 13:59:02] fvcore.common.checkpoint INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mconv1.weight[0m
  [35mbn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv1.weight[0m
  [35mlayer1.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv2.weight[0m
  [35mlayer1.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv1.weight[0m
  [35mlayer1.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv2.weight[0m
  [35mlayer1.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv1.weight[0m
  [35mlayer2.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv2.weight[0m
  [35mlayer2.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.downsample.0.weight[0m
  [35mlayer2.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv1.weight[0m
  [35mlayer2.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv2.weight[0m
  [35mlayer2.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv1.weight[0m
  [35mlayer3.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv2.weight[0m
  [35mlayer3.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.downsample.0.weight[0m
  [35mlayer3.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv1.weight[0m
  [35mlayer3.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv2.weight[0m
  [35mlayer3.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv1.weight[0m
  [35mlayer4.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv2.weight[0m
  [35mlayer4.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.downsample.0.weight[0m
  [35mlayer4.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv1.weight[0m
  [35mlayer4.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv2.weight[0m
  [35mlayer4.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mfc.{weight, bias}[0m
[10/31 14:01:50] detectron2 INFO: Rank of current process: 1. World size: 2
[10/31 14:01:51] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.3 (default, May 19 2020, 18:47:26) [GCC 7.3.0]
numpy                   1.19.1
detectron2              0.2.1 @/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 5.4
CUDA compiler           not available
detectron2 arch flags   /cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/_C.cpython-38-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.6.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /opt/common/cuda/cuda-10.0.130/lib64/
Pillow                  7.2.0
torchvision             0.7.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision
torchvision arch flags  /cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20201030
cv2                     4.4.0
----------------------  --------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[10/31 14:01:51] detectron2 INFO: Command line arguments: Namespace(config_file='configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml', dist_url='tcp://127.0.0.1:63010', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.MASK_ON', 'True', 'SOLVER.BASE_LR', '0.015', 'OUTPUT_DIR', 'temp'], resume=False)
[10/31 14:01:51] detectron2 INFO: Contents of args.config_file=configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml:
_BASE_: "../Base-RCNN-FPN.yaml"
MODEL:
  WEIGHTS: "https://download.pytorch.org/models/resnet18-5c106cde.pth"
  MASK_ON: True
  RESNETS:
    DEPTH: 18
    RES2_OUT_CHANNELS: 64
# DATASETS:
#   TRAIN: ("coco_2017_val",)
#   TEST: ("coco_2017_val",) #("coco_2017_test-dev",)
SOLVER:
  BASE_LR: 0.02
  CHECKPOINT_PERIOD: 7330
  # IMS_PER_BATCH: 24
  # STEPS: (40000, 53500)
  # MAX_ITER: 60000
  # WARMUP_FACTOR: 5e-4
  # WARMUP_ITERS: 2000
OUTPUT_DIR: output/faster_r18_fpn

[10/31 14:01:51] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32], [64], [128], [256], [512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 18
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 64
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: 
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://download.pytorch.org/models/resnet18-5c106cde.pth
OUTPUT_DIR: temp
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.015
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 7330
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[10/31 14:01:51] detectron2.utils.env INFO: Using a generated random seed 51832839
[10/31 14:01:52] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten()
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[10/31 14:02:12] detectron2.data.datasets.coco INFO: Loading datasets/coco/annotations/instances_train2017.json takes 20.33 seconds.
[10/31 14:02:13] detectron2.data.datasets.coco INFO: Loaded 118287 images in COCO format from datasets/coco/annotations/instances_train2017.json
[10/31 14:02:21] detectron2.data.build INFO: Removed 1021 images with no usable annotations. 117266 images left.
[10/31 14:02:26] detectron2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 257253       |   bicycle    | 7056         |      car      | 43533        |
|  motorcycle   | 8654         |   airplane   | 5129         |      bus      | 6061         |
|     train     | 4570         |    truck     | 9970         |     boat      | 10576        |
| traffic light | 12842        | fire hydrant | 1865         |   stop sign   | 1983         |
| parking meter | 1283         |    bench     | 9820         |     bird      | 10542        |
|      cat      | 4766         |     dog      | 5500         |     horse     | 6567         |
|     sheep     | 9223         |     cow      | 8014         |   elephant    | 5484         |
|     bear      | 1294         |    zebra     | 5269         |    giraffe    | 5128         |
|   backpack    | 8714         |   umbrella   | 11265        |    handbag    | 12342        |
|      tie      | 6448         |   suitcase   | 6112         |    frisbee    | 2681         |
|     skis      | 6623         |  snowboard   | 2681         |  sports ball  | 6299         |
|     kite      | 8802         | baseball bat | 3273         | baseball gl.. | 3747         |
|  skateboard   | 5536         |  surfboard   | 6095         | tennis racket | 4807         |
|    bottle     | 24070        |  wine glass  | 7839         |      cup      | 20574        |
|     fork      | 5474         |    knife     | 7760         |     spoon     | 6159         |
|     bowl      | 14323        |    banana    | 9195         |     apple     | 5776         |
|   sandwich    | 4356         |    orange    | 6302         |   broccoli    | 7261         |
|    carrot     | 7758         |   hot dog    | 2884         |     pizza     | 5807         |
|     donut     | 7005         |     cake     | 6296         |     chair     | 38073        |
|     couch     | 5779         | potted plant | 8631         |      bed      | 4192         |
| dining table  | 15695        |    toilet    | 4149         |      tv       | 5803         |
|    laptop     | 4960         |    mouse     | 2261         |    remote     | 5700         |
|   keyboard    | 2854         |  cell phone  | 6422         |   microwave   | 1672         |
|     oven      | 3334         |   toaster    | 225          |     sink      | 5609         |
| refrigerator  | 2634         |     book     | 24077        |     clock     | 6320         |
|     vase      | 6577         |   scissors   | 1464         |  teddy bear   | 4729         |
|  hair drier   | 198          |  toothbrush  | 1945         |               |              |
|     total     | 849949       |              |              |               |              |[0m
[10/31 14:02:26] detectron2.data.common INFO: Serializing 117266 elements to byte tensors and concatenating them all ...
[10/31 14:02:30] detectron2.data.common INFO: Serialized dataset takes 451.21 MiB
[10/31 14:02:30] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[10/31 14:02:30] detectron2.data.build INFO: Using training sampler TrainingSampler
[10/31 14:02:33] fvcore.common.checkpoint INFO: Loading checkpoint from https://download.pytorch.org/models/resnet18-5c106cde.pth
[10/31 14:02:33] fvcore.common.file_io INFO: URL https://download.pytorch.org/models/resnet18-5c106cde.pth cached in /cfarhomes/shishira/.torch/fvcore_cache/models/resnet18-5c106cde.pth
[10/31 14:02:33] fvcore.common.checkpoint INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mbackbone.bottom_up.res5.0.shortcut.norm.{bias, weight}[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{0, 4, 1, 2, 3}[0m
  [34mbackbone.bottom_up.res3.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.stem.conv1.weight[0m
  [34mbackbone.bottom_up.res3.0.shortcut.norm.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn3.{weight, bias}[0m
  [34mbackbone.fpn_output4.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.shortcut.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.weight[0m
  [34mbackbone.fpn_lateral4.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn1.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res5.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.conv2.weight[0m
  [34mbackbone.bottom_up.res4.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.fpn_output3.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv1.weight[0m
  [34mbackbone.fpn_lateral5.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.conv1.weight[0m
  [34mbackbone.bottom_up.res3.0.conv1.norm.{bias, weight}[0m
  [34mroi_heads.box_head.fc1.{bias, weight}[0m
  [34mbackbone.bottom_up.stem.conv1.norm.{weight, bias}[0m
  [34mroi_heads.mask_head.predictor.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv2.weight[0m
  [34mbackbone.bottom_up.res4.1.conv1.norm.{bias, weight}[0m
  [34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.1.conv2.weight[0m
  [34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.{weight, bias}[0m
  [34mproposal_generator.rpn_head.conv.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv2.weight[0m
  [34mbackbone.bottom_up.res5.0.conv1.weight[0m
  [34mbackbone.bottom_up.res4.0.shortcut.weight[0m
  [34mbackbone.fpn_lateral2.{weight, bias}[0m
  [34mroi_heads.box_head.fc2.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv2.norm.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn4.{weight, bias}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv2.weight[0m
  [34mbackbone.fpn_lateral3.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv1.weight[0m
  [34mbackbone.bottom_up.res2.1.conv2.weight[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv1.weight[0m
  [34mroi_heads.mask_head.deconv.{weight, bias}[0m
  [34mbackbone.fpn_output5.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn2.{bias, weight}[0m
  [34mbackbone.fpn_output2.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv2.weight[0m
  [34mbackbone.bottom_up.res5.1.conv1.weight[0m
  [34mbackbone.bottom_up.res4.0.conv2.weight[0m
  [34mbackbone.bottom_up.res3.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv1.weight[0m
  [34mbackbone.bottom_up.res4.1.conv1.weight[0m
[10/31 14:02:33] fvcore.common.checkpoint INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mconv1.weight[0m
  [35mbn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv1.weight[0m
  [35mlayer1.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv2.weight[0m
  [35mlayer1.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv1.weight[0m
  [35mlayer1.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv2.weight[0m
  [35mlayer1.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv1.weight[0m
  [35mlayer2.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv2.weight[0m
  [35mlayer2.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.downsample.0.weight[0m
  [35mlayer2.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv1.weight[0m
  [35mlayer2.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv2.weight[0m
  [35mlayer2.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv1.weight[0m
  [35mlayer3.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv2.weight[0m
  [35mlayer3.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.downsample.0.weight[0m
  [35mlayer3.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv1.weight[0m
  [35mlayer3.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv2.weight[0m
  [35mlayer3.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv1.weight[0m
  [35mlayer4.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv2.weight[0m
  [35mlayer4.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.downsample.0.weight[0m
  [35mlayer4.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv1.weight[0m
  [35mlayer4.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv2.weight[0m
  [35mlayer4.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mfc.{weight, bias}[0m
[10/31 14:03:11] detectron2 INFO: Rank of current process: 1. World size: 2
[10/31 14:03:12] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.3 (default, May 19 2020, 18:47:26) [GCC 7.3.0]
numpy                   1.19.1
detectron2              0.2.1 @/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 5.4
CUDA compiler           not available
detectron2 arch flags   /cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/_C.cpython-38-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.6.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /opt/common/cuda/cuda-10.0.130/lib64/
Pillow                  7.2.0
torchvision             0.7.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision
torchvision arch flags  /cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20201030
cv2                     4.4.0
----------------------  --------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[10/31 14:03:12] detectron2 INFO: Command line arguments: Namespace(config_file='configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml', dist_url='tcp://127.0.0.1:63010', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.MASK_ON', 'True', 'SOLVER.BASE_LR', '0.015', 'OUTPUT_DIR', 'temp'], resume=False)
[10/31 14:03:12] detectron2 INFO: Contents of args.config_file=configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml:
_BASE_: "../Base-RCNN-FPN.yaml"
MODEL:
  WEIGHTS: "https://download.pytorch.org/models/resnet18-5c106cde.pth"
  MASK_ON: True
  RESNETS:
    DEPTH: 18
    RES2_OUT_CHANNELS: 64
# DATASETS:
#   TRAIN: ("coco_2017_val",)
#   TEST: ("coco_2017_val",) #("coco_2017_test-dev",)
SOLVER:
  BASE_LR: 0.02
  CHECKPOINT_PERIOD: 7330
  # IMS_PER_BATCH: 24
  # STEPS: (40000, 53500)
  # MAX_ITER: 60000
  # WARMUP_FACTOR: 5e-4
  # WARMUP_ITERS: 2000
OUTPUT_DIR: output/faster_r18_fpn

[10/31 14:03:12] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32], [64], [128], [256], [512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 18
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 64
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: 
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://download.pytorch.org/models/resnet18-5c106cde.pth
OUTPUT_DIR: temp
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.015
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 7330
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[10/31 14:03:12] detectron2.utils.env INFO: Using a generated random seed 12502803
[10/31 14:03:13] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten()
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[10/31 14:03:32] detectron2.data.datasets.coco INFO: Loading datasets/coco/annotations/instances_train2017.json takes 19.85 seconds.
[10/31 14:03:34] detectron2.data.datasets.coco INFO: Loaded 118287 images in COCO format from datasets/coco/annotations/instances_train2017.json
[10/31 14:03:41] detectron2.data.build INFO: Removed 1021 images with no usable annotations. 117266 images left.
[10/31 14:03:46] detectron2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 257253       |   bicycle    | 7056         |      car      | 43533        |
|  motorcycle   | 8654         |   airplane   | 5129         |      bus      | 6061         |
|     train     | 4570         |    truck     | 9970         |     boat      | 10576        |
| traffic light | 12842        | fire hydrant | 1865         |   stop sign   | 1983         |
| parking meter | 1283         |    bench     | 9820         |     bird      | 10542        |
|      cat      | 4766         |     dog      | 5500         |     horse     | 6567         |
|     sheep     | 9223         |     cow      | 8014         |   elephant    | 5484         |
|     bear      | 1294         |    zebra     | 5269         |    giraffe    | 5128         |
|   backpack    | 8714         |   umbrella   | 11265        |    handbag    | 12342        |
|      tie      | 6448         |   suitcase   | 6112         |    frisbee    | 2681         |
|     skis      | 6623         |  snowboard   | 2681         |  sports ball  | 6299         |
|     kite      | 8802         | baseball bat | 3273         | baseball gl.. | 3747         |
|  skateboard   | 5536         |  surfboard   | 6095         | tennis racket | 4807         |
|    bottle     | 24070        |  wine glass  | 7839         |      cup      | 20574        |
|     fork      | 5474         |    knife     | 7760         |     spoon     | 6159         |
|     bowl      | 14323        |    banana    | 9195         |     apple     | 5776         |
|   sandwich    | 4356         |    orange    | 6302         |   broccoli    | 7261         |
|    carrot     | 7758         |   hot dog    | 2884         |     pizza     | 5807         |
|     donut     | 7005         |     cake     | 6296         |     chair     | 38073        |
|     couch     | 5779         | potted plant | 8631         |      bed      | 4192         |
| dining table  | 15695        |    toilet    | 4149         |      tv       | 5803         |
|    laptop     | 4960         |    mouse     | 2261         |    remote     | 5700         |
|   keyboard    | 2854         |  cell phone  | 6422         |   microwave   | 1672         |
|     oven      | 3334         |   toaster    | 225          |     sink      | 5609         |
| refrigerator  | 2634         |     book     | 24077        |     clock     | 6320         |
|     vase      | 6577         |   scissors   | 1464         |  teddy bear   | 4729         |
|  hair drier   | 198          |  toothbrush  | 1945         |               |              |
|     total     | 849949       |              |              |               |              |[0m
[10/31 14:03:46] detectron2.data.common INFO: Serializing 117266 elements to byte tensors and concatenating them all ...
[10/31 14:03:50] detectron2.data.common INFO: Serialized dataset takes 451.21 MiB
[10/31 14:03:50] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[10/31 14:03:50] detectron2.data.build INFO: Using training sampler TrainingSampler
[10/31 14:03:54] fvcore.common.checkpoint INFO: Loading checkpoint from https://download.pytorch.org/models/resnet18-5c106cde.pth
[10/31 14:03:54] fvcore.common.file_io INFO: URL https://download.pytorch.org/models/resnet18-5c106cde.pth cached in /cfarhomes/shishira/.torch/fvcore_cache/models/resnet18-5c106cde.pth
[10/31 14:03:55] fvcore.common.checkpoint INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mbackbone.bottom_up.res4.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.conv2.weight[0m
  [34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv1.weight[0m
  [34mroi_heads.mask_head.mask_fcn4.{bias, weight}[0m
  [34mbackbone.fpn_lateral5.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.norm.{bias, weight}[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{0, 1, 2, 3, 4}[0m
  [34mbackbone.fpn_output2.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.1.conv1.weight[0m
  [34mbackbone.bottom_up.res2.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.shortcut.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res5.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res2.1.conv2.weight[0m
  [34mbackbone.bottom_up.res5.1.conv2.weight[0m
  [34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv2.weight[0m
  [34mbackbone.fpn_output3.{weight, bias}[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.fpn_output4.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv1.weight[0m
  [34mbackbone.bottom_up.res4.1.conv2.weight[0m
  [34mbackbone.bottom_up.res3.1.conv2.weight[0m
  [34mbackbone.bottom_up.res5.1.conv1.weight[0m
  [34mbackbone.bottom_up.res4.0.conv2.weight[0m
  [34mroi_heads.mask_head.deconv.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv2.norm.{weight, bias}[0m
  [34mroi_heads.box_predictor.bbox_pred.{weight, bias}[0m
  [34mbackbone.fpn_output5.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.fpn_lateral2.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn2.{weight, bias}[0m
  [34mroi_heads.box_head.fc2.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv1.weight[0m
  [34mroi_heads.mask_head.mask_fcn3.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn1.{bias, weight}[0m
  [34mbackbone.bottom_up.stem.conv1.weight[0m
  [34mbackbone.bottom_up.res4.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv2.weight[0m
  [34mbackbone.fpn_lateral3.{weight, bias}[0m
  [34mbackbone.bottom_up.stem.conv1.norm.{weight, bias}[0m
  [34mproposal_generator.rpn_head.conv.{weight, bias}[0m
  [34mbackbone.fpn_lateral4.{weight, bias}[0m
  [34mroi_heads.mask_head.predictor.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res3.0.conv1.weight[0m
  [34mbackbone.bottom_up.res4.0.conv1.weight[0m
  [34mroi_heads.box_head.fc1.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv1.weight[0m
[10/31 14:03:55] fvcore.common.checkpoint INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mconv1.weight[0m
  [35mbn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv1.weight[0m
  [35mlayer1.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv2.weight[0m
  [35mlayer1.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv1.weight[0m
  [35mlayer1.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv2.weight[0m
  [35mlayer1.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv1.weight[0m
  [35mlayer2.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv2.weight[0m
  [35mlayer2.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.downsample.0.weight[0m
  [35mlayer2.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv1.weight[0m
  [35mlayer2.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv2.weight[0m
  [35mlayer2.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv1.weight[0m
  [35mlayer3.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv2.weight[0m
  [35mlayer3.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.downsample.0.weight[0m
  [35mlayer3.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv1.weight[0m
  [35mlayer3.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv2.weight[0m
  [35mlayer3.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv1.weight[0m
  [35mlayer4.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv2.weight[0m
  [35mlayer4.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.downsample.0.weight[0m
  [35mlayer4.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv1.weight[0m
  [35mlayer4.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv2.weight[0m
  [35mlayer4.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mfc.{weight, bias}[0m
[10/31 14:03:56] detectron2.engine.train_loop INFO: Starting training from iteration 0
[10/31 14:04:11] detectron2.engine.hooks INFO: Total training time: 0:00:14 (0:00:00 on hooks)
[10/31 14:04:20] detectron2 INFO: Rank of current process: 1. World size: 2
[10/31 14:04:21] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.3 (default, May 19 2020, 18:47:26) [GCC 7.3.0]
numpy                   1.19.1
detectron2              0.2.1 @/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 5.4
CUDA compiler           not available
detectron2 arch flags   /cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/_C.cpython-38-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.6.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /opt/common/cuda/cuda-10.0.130/lib64/
Pillow                  7.2.0
torchvision             0.7.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision
torchvision arch flags  /cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20201030
cv2                     4.4.0
----------------------  --------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[10/31 14:04:21] detectron2 INFO: Command line arguments: Namespace(config_file='configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml', dist_url='tcp://127.0.0.1:63010', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.MASK_ON', 'True', 'SOLVER.BASE_LR', '0.015', 'OUTPUT_DIR', 'temp'], resume=False)
[10/31 14:04:21] detectron2 INFO: Contents of args.config_file=configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml:
_BASE_: "../Base-RCNN-FPN.yaml"
MODEL:
  WEIGHTS: "https://download.pytorch.org/models/resnet18-5c106cde.pth"
  MASK_ON: True
  RESNETS:
    DEPTH: 18
    RES2_OUT_CHANNELS: 64
# DATASETS:
#   TRAIN: ("coco_2017_val",)
#   TEST: ("coco_2017_val",) #("coco_2017_test-dev",)
SOLVER:
  BASE_LR: 0.02
  CHECKPOINT_PERIOD: 7330
  # IMS_PER_BATCH: 24
  # STEPS: (40000, 53500)
  # MAX_ITER: 60000
  # WARMUP_FACTOR: 5e-4
  # WARMUP_ITERS: 2000
OUTPUT_DIR: output/faster_r18_fpn

[10/31 14:04:21] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32], [64], [128], [256], [512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 18
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 64
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: 
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://download.pytorch.org/models/resnet18-5c106cde.pth
OUTPUT_DIR: temp
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.015
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 7330
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[10/31 14:04:21] detectron2.utils.env INFO: Using a generated random seed 21543473
[10/31 14:04:22] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten()
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[10/31 14:04:42] detectron2.data.datasets.coco INFO: Loading datasets/coco/annotations/instances_train2017.json takes 19.95 seconds.
[10/31 14:04:43] detectron2.data.datasets.coco INFO: Loaded 118287 images in COCO format from datasets/coco/annotations/instances_train2017.json
[10/31 14:04:50] detectron2.data.build INFO: Removed 1021 images with no usable annotations. 117266 images left.
[10/31 14:04:55] detectron2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 257253       |   bicycle    | 7056         |      car      | 43533        |
|  motorcycle   | 8654         |   airplane   | 5129         |      bus      | 6061         |
|     train     | 4570         |    truck     | 9970         |     boat      | 10576        |
| traffic light | 12842        | fire hydrant | 1865         |   stop sign   | 1983         |
| parking meter | 1283         |    bench     | 9820         |     bird      | 10542        |
|      cat      | 4766         |     dog      | 5500         |     horse     | 6567         |
|     sheep     | 9223         |     cow      | 8014         |   elephant    | 5484         |
|     bear      | 1294         |    zebra     | 5269         |    giraffe    | 5128         |
|   backpack    | 8714         |   umbrella   | 11265        |    handbag    | 12342        |
|      tie      | 6448         |   suitcase   | 6112         |    frisbee    | 2681         |
|     skis      | 6623         |  snowboard   | 2681         |  sports ball  | 6299         |
|     kite      | 8802         | baseball bat | 3273         | baseball gl.. | 3747         |
|  skateboard   | 5536         |  surfboard   | 6095         | tennis racket | 4807         |
|    bottle     | 24070        |  wine glass  | 7839         |      cup      | 20574        |
|     fork      | 5474         |    knife     | 7760         |     spoon     | 6159         |
|     bowl      | 14323        |    banana    | 9195         |     apple     | 5776         |
|   sandwich    | 4356         |    orange    | 6302         |   broccoli    | 7261         |
|    carrot     | 7758         |   hot dog    | 2884         |     pizza     | 5807         |
|     donut     | 7005         |     cake     | 6296         |     chair     | 38073        |
|     couch     | 5779         | potted plant | 8631         |      bed      | 4192         |
| dining table  | 15695        |    toilet    | 4149         |      tv       | 5803         |
|    laptop     | 4960         |    mouse     | 2261         |    remote     | 5700         |
|   keyboard    | 2854         |  cell phone  | 6422         |   microwave   | 1672         |
|     oven      | 3334         |   toaster    | 225          |     sink      | 5609         |
| refrigerator  | 2634         |     book     | 24077        |     clock     | 6320         |
|     vase      | 6577         |   scissors   | 1464         |  teddy bear   | 4729         |
|  hair drier   | 198          |  toothbrush  | 1945         |               |              |
|     total     | 849949       |              |              |               |              |[0m
[10/31 14:04:55] detectron2.data.common INFO: Serializing 117266 elements to byte tensors and concatenating them all ...
[10/31 14:04:59] detectron2.data.common INFO: Serialized dataset takes 451.21 MiB
[10/31 14:04:59] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[10/31 14:04:59] detectron2.data.build INFO: Using training sampler TrainingSampler
[10/31 14:05:03] fvcore.common.checkpoint INFO: Loading checkpoint from https://download.pytorch.org/models/resnet18-5c106cde.pth
[10/31 14:05:03] fvcore.common.file_io INFO: URL https://download.pytorch.org/models/resnet18-5c106cde.pth cached in /cfarhomes/shishira/.torch/fvcore_cache/models/resnet18-5c106cde.pth
[10/31 14:05:03] fvcore.common.checkpoint INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.fpn_lateral3.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn1.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.fpn_output4.{weight, bias}[0m
  [34mroi_heads.box_head.fc1.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv2.weight[0m
  [34mbackbone.bottom_up.res5.0.shortcut.weight[0m
  [34mroi_heads.box_head.fc2.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv2.weight[0m
  [34mbackbone.bottom_up.res5.0.conv2.norm.{bias, weight}[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
  [34mbackbone.fpn_lateral5.{weight, bias}[0m
  [34mroi_heads.mask_head.deconv.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv2.weight[0m
  [34mproposal_generator.rpn_head.conv.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn4.{bias, weight}[0m
  [34mbackbone.fpn_lateral4.{weight, bias}[0m
  [34mroi_heads.box_predictor.cls_score.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.stem.conv1.weight[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{2, 3, 0, 1, 4}[0m
  [34mroi_heads.mask_head.predictor.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv1.norm.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn3.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv2.weight[0m
  [34mbackbone.bottom_up.stem.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv1.weight[0m
  [34mbackbone.bottom_up.res3.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res3.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.conv2.weight[0m
  [34mbackbone.fpn_output2.{bias, weight}[0m
  [34mbackbone.fpn_lateral2.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.conv2.weight[0m
  [34mroi_heads.mask_head.mask_fcn2.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv2.weight[0m
  [34mproposal_generator.rpn_head.objectness_logits.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv1.weight[0m
  [34mbackbone.fpn_output3.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res4.0.shortcut.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv2.weight[0m
  [34mbackbone.bottom_up.res4.1.conv1.weight[0m
  [34mbackbone.fpn_output5.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv1.weight[0m
  [34mbackbone.bottom_up.res3.1.conv1.weight[0m
  [34mbackbone.bottom_up.res4.0.conv1.weight[0m
  [34mbackbone.bottom_up.res5.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv1.weight[0m
  [34mbackbone.bottom_up.res2.0.conv1.weight[0m
[10/31 14:05:03] fvcore.common.checkpoint INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mconv1.weight[0m
  [35mbn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv1.weight[0m
  [35mlayer1.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv2.weight[0m
  [35mlayer1.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv1.weight[0m
  [35mlayer1.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv2.weight[0m
  [35mlayer1.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv1.weight[0m
  [35mlayer2.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv2.weight[0m
  [35mlayer2.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.downsample.0.weight[0m
  [35mlayer2.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv1.weight[0m
  [35mlayer2.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv2.weight[0m
  [35mlayer2.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv1.weight[0m
  [35mlayer3.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv2.weight[0m
  [35mlayer3.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.downsample.0.weight[0m
  [35mlayer3.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv1.weight[0m
  [35mlayer3.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv2.weight[0m
  [35mlayer3.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv1.weight[0m
  [35mlayer4.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv2.weight[0m
  [35mlayer4.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.downsample.0.weight[0m
  [35mlayer4.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv1.weight[0m
  [35mlayer4.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv2.weight[0m
  [35mlayer4.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mfc.{weight, bias}[0m
[10/31 14:05:04] detectron2.engine.train_loop INFO: Starting training from iteration 0
[10/31 14:05:18] detectron2.engine.hooks INFO: Total training time: 0:00:13 (0:00:00 on hooks)
[10/31 14:06:14] detectron2 INFO: Rank of current process: 1. World size: 2
[10/31 14:06:15] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.3 (default, May 19 2020, 18:47:26) [GCC 7.3.0]
numpy                   1.19.1
detectron2              0.2.1 @/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 5.4
CUDA compiler           not available
detectron2 arch flags   /cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/_C.cpython-38-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.6.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /opt/common/cuda/cuda-10.0.130/lib64/
Pillow                  7.2.0
torchvision             0.7.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision
torchvision arch flags  /cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20201030
cv2                     4.4.0
----------------------  --------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[10/31 14:06:15] detectron2 INFO: Command line arguments: Namespace(config_file='configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml', dist_url='tcp://127.0.0.1:63010', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.MASK_ON', 'True', 'SOLVER.BASE_LR', '0.015', 'OUTPUT_DIR', 'temp'], resume=False)
[10/31 14:06:15] detectron2 INFO: Contents of args.config_file=configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml:
_BASE_: "../Base-RCNN-FPN.yaml"
MODEL:
  WEIGHTS: "https://download.pytorch.org/models/resnet18-5c106cde.pth"
  MASK_ON: True
  RESNETS:
    DEPTH: 18
    RES2_OUT_CHANNELS: 64
# DATASETS:
#   TRAIN: ("coco_2017_val",)
#   TEST: ("coco_2017_val",) #("coco_2017_test-dev",)
SOLVER:
  BASE_LR: 0.02
  CHECKPOINT_PERIOD: 7330
  # IMS_PER_BATCH: 24
  # STEPS: (40000, 53500)
  # MAX_ITER: 60000
  # WARMUP_FACTOR: 5e-4
  # WARMUP_ITERS: 2000
OUTPUT_DIR: output/faster_r18_fpn

[10/31 14:06:15] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32], [64], [128], [256], [512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 18
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 64
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: 
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://download.pytorch.org/models/resnet18-5c106cde.pth
OUTPUT_DIR: temp
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.015
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 7330
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[10/31 14:06:15] detectron2.utils.env INFO: Using a generated random seed 15873275
[10/31 14:06:16] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten()
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[10/31 14:06:36] detectron2.data.datasets.coco INFO: Loading datasets/coco/annotations/instances_train2017.json takes 19.99 seconds.
[10/31 14:06:37] detectron2.data.datasets.coco INFO: Loaded 118287 images in COCO format from datasets/coco/annotations/instances_train2017.json
[10/31 14:06:45] detectron2.data.build INFO: Removed 1021 images with no usable annotations. 117266 images left.
[10/31 14:06:50] detectron2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 257253       |   bicycle    | 7056         |      car      | 43533        |
|  motorcycle   | 8654         |   airplane   | 5129         |      bus      | 6061         |
|     train     | 4570         |    truck     | 9970         |     boat      | 10576        |
| traffic light | 12842        | fire hydrant | 1865         |   stop sign   | 1983         |
| parking meter | 1283         |    bench     | 9820         |     bird      | 10542        |
|      cat      | 4766         |     dog      | 5500         |     horse     | 6567         |
|     sheep     | 9223         |     cow      | 8014         |   elephant    | 5484         |
|     bear      | 1294         |    zebra     | 5269         |    giraffe    | 5128         |
|   backpack    | 8714         |   umbrella   | 11265        |    handbag    | 12342        |
|      tie      | 6448         |   suitcase   | 6112         |    frisbee    | 2681         |
|     skis      | 6623         |  snowboard   | 2681         |  sports ball  | 6299         |
|     kite      | 8802         | baseball bat | 3273         | baseball gl.. | 3747         |
|  skateboard   | 5536         |  surfboard   | 6095         | tennis racket | 4807         |
|    bottle     | 24070        |  wine glass  | 7839         |      cup      | 20574        |
|     fork      | 5474         |    knife     | 7760         |     spoon     | 6159         |
|     bowl      | 14323        |    banana    | 9195         |     apple     | 5776         |
|   sandwich    | 4356         |    orange    | 6302         |   broccoli    | 7261         |
|    carrot     | 7758         |   hot dog    | 2884         |     pizza     | 5807         |
|     donut     | 7005         |     cake     | 6296         |     chair     | 38073        |
|     couch     | 5779         | potted plant | 8631         |      bed      | 4192         |
| dining table  | 15695        |    toilet    | 4149         |      tv       | 5803         |
|    laptop     | 4960         |    mouse     | 2261         |    remote     | 5700         |
|   keyboard    | 2854         |  cell phone  | 6422         |   microwave   | 1672         |
|     oven      | 3334         |   toaster    | 225          |     sink      | 5609         |
| refrigerator  | 2634         |     book     | 24077        |     clock     | 6320         |
|     vase      | 6577         |   scissors   | 1464         |  teddy bear   | 4729         |
|  hair drier   | 198          |  toothbrush  | 1945         |               |              |
|     total     | 849949       |              |              |               |              |[0m
[10/31 14:06:50] detectron2.data.common INFO: Serializing 117266 elements to byte tensors and concatenating them all ...
[10/31 14:06:54] detectron2.data.common INFO: Serialized dataset takes 451.21 MiB
[10/31 14:06:54] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[10/31 14:06:54] detectron2.data.build INFO: Using training sampler TrainingSampler
[10/31 14:06:58] fvcore.common.checkpoint INFO: Loading checkpoint from https://download.pytorch.org/models/resnet18-5c106cde.pth
[10/31 14:06:58] fvcore.common.file_io INFO: URL https://download.pytorch.org/models/resnet18-5c106cde.pth cached in /cfarhomes/shishira/.torch/fvcore_cache/models/resnet18-5c106cde.pth
[10/31 14:06:58] fvcore.common.checkpoint INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mbackbone.fpn_output4.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res5.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.{weight, bias}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{weight, bias}[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{2, 1, 3, 4, 0}[0m
  [34mbackbone.bottom_up.res5.1.conv1.norm.{bias, weight}[0m
  [34mroi_heads.box_head.fc1.{bias, weight}[0m
  [34mroi_heads.box_predictor.bbox_pred.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv1.norm.{weight, bias}[0m
  [34mroi_heads.box_head.fc2.{weight, bias}[0m
  [34mbackbone.fpn_lateral4.{bias, weight}[0m
  [34mroi_heads.mask_head.predictor.{weight, bias}[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{weight, bias}[0m
  [34mbackbone.fpn_output3.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn1.{bias, weight}[0m
  [34mbackbone.fpn_lateral5.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.conv2.weight[0m
  [34mbackbone.bottom_up.res4.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv2.norm.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn4.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv1.norm.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn3.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.1.conv1.weight[0m
  [34mbackbone.bottom_up.res5.0.shortcut.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv2.weight[0m
  [34mbackbone.bottom_up.res3.1.conv1.weight[0m
  [34mbackbone.bottom_up.res4.1.conv2.weight[0m
  [34mbackbone.bottom_up.res5.1.conv2.weight[0m
  [34mbackbone.fpn_lateral2.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.fpn_output5.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv2.norm.{weight, bias}[0m
  [34mproposal_generator.rpn_head.conv.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv2.weight[0m
  [34mbackbone.bottom_up.stem.conv1.weight[0m
  [34mbackbone.bottom_up.res3.0.shortcut.weight[0m
  [34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res3.0.conv1.weight[0m
  [34mbackbone.bottom_up.stem.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv1.weight[0m
  [34mbackbone.fpn_output2.{weight, bias}[0m
  [34mbackbone.fpn_lateral3.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv2.weight[0m
  [34mbackbone.bottom_up.res5.1.conv1.weight[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn2.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv1.weight[0m
  [34mbackbone.bottom_up.res4.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv1.weight[0m
  [34mroi_heads.mask_head.deconv.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.conv2.weight[0m
  [34mbackbone.bottom_up.res4.0.shortcut.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.conv1.weight[0m
  [34mbackbone.bottom_up.res3.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv2.weight[0m
[10/31 14:06:58] fvcore.common.checkpoint INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mconv1.weight[0m
  [35mbn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv1.weight[0m
  [35mlayer1.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv2.weight[0m
  [35mlayer1.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv1.weight[0m
  [35mlayer1.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv2.weight[0m
  [35mlayer1.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv1.weight[0m
  [35mlayer2.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv2.weight[0m
  [35mlayer2.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.downsample.0.weight[0m
  [35mlayer2.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv1.weight[0m
  [35mlayer2.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv2.weight[0m
  [35mlayer2.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv1.weight[0m
  [35mlayer3.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv2.weight[0m
  [35mlayer3.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.downsample.0.weight[0m
  [35mlayer3.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv1.weight[0m
  [35mlayer3.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv2.weight[0m
  [35mlayer3.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv1.weight[0m
  [35mlayer4.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv2.weight[0m
  [35mlayer4.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.downsample.0.weight[0m
  [35mlayer4.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv1.weight[0m
  [35mlayer4.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv2.weight[0m
  [35mlayer4.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mfc.{weight, bias}[0m
[10/31 14:07:14] detectron2 INFO: Rank of current process: 1. World size: 2
[10/31 14:07:14] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.3 (default, May 19 2020, 18:47:26) [GCC 7.3.0]
numpy                   1.19.1
detectron2              0.2.1 @/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 5.4
CUDA compiler           not available
detectron2 arch flags   /cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/_C.cpython-38-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.6.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /opt/common/cuda/cuda-10.0.130/lib64/
Pillow                  7.2.0
torchvision             0.7.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision
torchvision arch flags  /cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20201030
cv2                     4.4.0
----------------------  --------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[10/31 14:07:14] detectron2 INFO: Command line arguments: Namespace(config_file='configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml', dist_url='tcp://127.0.0.1:63010', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.MASK_ON', 'True', 'SOLVER.BASE_LR', '0.015', 'OUTPUT_DIR', 'temp'], resume=False)
[10/31 14:07:14] detectron2 INFO: Contents of args.config_file=configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml:
_BASE_: "../Base-RCNN-FPN.yaml"
MODEL:
  WEIGHTS: "https://download.pytorch.org/models/resnet18-5c106cde.pth"
  MASK_ON: True
  RESNETS:
    DEPTH: 18
    RES2_OUT_CHANNELS: 64
# DATASETS:
#   TRAIN: ("coco_2017_val",)
#   TEST: ("coco_2017_val",) #("coco_2017_test-dev",)
SOLVER:
  BASE_LR: 0.02
  CHECKPOINT_PERIOD: 7330
  # IMS_PER_BATCH: 24
  # STEPS: (40000, 53500)
  # MAX_ITER: 60000
  # WARMUP_FACTOR: 5e-4
  # WARMUP_ITERS: 2000
OUTPUT_DIR: output/faster_r18_fpn

[10/31 14:07:14] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32], [64], [128], [256], [512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 18
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 64
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: 
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://download.pytorch.org/models/resnet18-5c106cde.pth
OUTPUT_DIR: temp
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.015
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 7330
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[10/31 14:07:14] detectron2.utils.env INFO: Using a generated random seed 14943991
[10/31 14:07:15] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten()
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[10/31 14:07:35] detectron2.data.datasets.coco INFO: Loading datasets/coco/annotations/instances_train2017.json takes 20.02 seconds.
[10/31 14:07:36] detectron2.data.datasets.coco INFO: Loaded 118287 images in COCO format from datasets/coco/annotations/instances_train2017.json
[10/31 14:07:44] detectron2.data.build INFO: Removed 1021 images with no usable annotations. 117266 images left.
[10/31 14:07:49] detectron2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 257253       |   bicycle    | 7056         |      car      | 43533        |
|  motorcycle   | 8654         |   airplane   | 5129         |      bus      | 6061         |
|     train     | 4570         |    truck     | 9970         |     boat      | 10576        |
| traffic light | 12842        | fire hydrant | 1865         |   stop sign   | 1983         |
| parking meter | 1283         |    bench     | 9820         |     bird      | 10542        |
|      cat      | 4766         |     dog      | 5500         |     horse     | 6567         |
|     sheep     | 9223         |     cow      | 8014         |   elephant    | 5484         |
|     bear      | 1294         |    zebra     | 5269         |    giraffe    | 5128         |
|   backpack    | 8714         |   umbrella   | 11265        |    handbag    | 12342        |
|      tie      | 6448         |   suitcase   | 6112         |    frisbee    | 2681         |
|     skis      | 6623         |  snowboard   | 2681         |  sports ball  | 6299         |
|     kite      | 8802         | baseball bat | 3273         | baseball gl.. | 3747         |
|  skateboard   | 5536         |  surfboard   | 6095         | tennis racket | 4807         |
|    bottle     | 24070        |  wine glass  | 7839         |      cup      | 20574        |
|     fork      | 5474         |    knife     | 7760         |     spoon     | 6159         |
|     bowl      | 14323        |    banana    | 9195         |     apple     | 5776         |
|   sandwich    | 4356         |    orange    | 6302         |   broccoli    | 7261         |
|    carrot     | 7758         |   hot dog    | 2884         |     pizza     | 5807         |
|     donut     | 7005         |     cake     | 6296         |     chair     | 38073        |
|     couch     | 5779         | potted plant | 8631         |      bed      | 4192         |
| dining table  | 15695        |    toilet    | 4149         |      tv       | 5803         |
|    laptop     | 4960         |    mouse     | 2261         |    remote     | 5700         |
|   keyboard    | 2854         |  cell phone  | 6422         |   microwave   | 1672         |
|     oven      | 3334         |   toaster    | 225          |     sink      | 5609         |
| refrigerator  | 2634         |     book     | 24077        |     clock     | 6320         |
|     vase      | 6577         |   scissors   | 1464         |  teddy bear   | 4729         |
|  hair drier   | 198          |  toothbrush  | 1945         |               |              |
|     total     | 849949       |              |              |               |              |[0m
[10/31 14:07:49] detectron2.data.common INFO: Serializing 117266 elements to byte tensors and concatenating them all ...
[10/31 14:07:53] detectron2.data.common INFO: Serialized dataset takes 451.21 MiB
[10/31 14:07:53] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[10/31 14:07:53] detectron2.data.build INFO: Using training sampler TrainingSampler
[10/31 14:07:56] fvcore.common.checkpoint INFO: Loading checkpoint from https://download.pytorch.org/models/resnet18-5c106cde.pth
[10/31 14:07:56] fvcore.common.file_io INFO: URL https://download.pytorch.org/models/resnet18-5c106cde.pth cached in /cfarhomes/shishira/.torch/fvcore_cache/models/resnet18-5c106cde.pth
[10/31 14:07:56] fvcore.common.checkpoint INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mbackbone.bottom_up.res3.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv2.norm.{bias, weight}[0m
  [34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.norm.{bias, weight}[0m
  [34mbackbone.fpn_output2.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.{weight, bias}[0m
  [34mroi_heads.mask_head.predictor.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv2.weight[0m
  [34mbackbone.bottom_up.res4.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv1.weight[0m
  [34mbackbone.bottom_up.res5.0.shortcut.norm.{bias, weight}[0m
  [34mroi_heads.box_head.fc2.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res4.0.conv2.weight[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
  [34mbackbone.fpn_output4.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv1.weight[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{4, 2, 3, 0, 1}[0m
  [34mbackbone.fpn_lateral2.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv2.weight[0m
  [34mbackbone.bottom_up.res3.0.conv1.weight[0m
  [34mbackbone.fpn_output3.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv2.weight[0m
  [34mbackbone.bottom_up.res2.1.conv2.weight[0m
  [34mbackbone.fpn_lateral3.{weight, bias}[0m
  [34mproposal_generator.rpn_head.conv.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn4.{weight, bias}[0m
  [34mbackbone.bottom_up.stem.conv1.weight[0m
  [34mbackbone.bottom_up.res3.0.conv1.norm.{weight, bias}[0m
  [34mroi_heads.mask_head.deconv.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv1.weight[0m
  [34mbackbone.bottom_up.res4.1.conv2.weight[0m
  [34mbackbone.bottom_up.res4.0.shortcut.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.conv2.weight[0m
  [34mbackbone.bottom_up.res2.0.conv2.norm.{weight, bias}[0m
  [34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn2.{weight, bias}[0m
  [34mbackbone.fpn_lateral5.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.fpn_output5.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv1.weight[0m
  [34mbackbone.bottom_up.res4.0.conv1.weight[0m
  [34mbackbone.bottom_up.stem.conv1.norm.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn1.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv1.weight[0m
  [34mbackbone.bottom_up.res3.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res4.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res4.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv2.weight[0m
  [34mroi_heads.box_head.fc1.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv1.weight[0m
  [34mbackbone.fpn_lateral4.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv1.norm.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn3.{bias, weight}[0m
[10/31 14:07:56] fvcore.common.checkpoint INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mconv1.weight[0m
  [35mbn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv1.weight[0m
  [35mlayer1.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv2.weight[0m
  [35mlayer1.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv1.weight[0m
  [35mlayer1.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv2.weight[0m
  [35mlayer1.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv1.weight[0m
  [35mlayer2.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv2.weight[0m
  [35mlayer2.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.downsample.0.weight[0m
  [35mlayer2.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv1.weight[0m
  [35mlayer2.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv2.weight[0m
  [35mlayer2.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv1.weight[0m
  [35mlayer3.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv2.weight[0m
  [35mlayer3.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.downsample.0.weight[0m
  [35mlayer3.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv1.weight[0m
  [35mlayer3.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv2.weight[0m
  [35mlayer3.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv1.weight[0m
  [35mlayer4.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv2.weight[0m
  [35mlayer4.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.downsample.0.weight[0m
  [35mlayer4.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv1.weight[0m
  [35mlayer4.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv2.weight[0m
  [35mlayer4.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mfc.{weight, bias}[0m
[10/31 14:08:19] detectron2 INFO: Rank of current process: 1. World size: 2
[10/31 14:08:20] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.3 (default, May 19 2020, 18:47:26) [GCC 7.3.0]
numpy                   1.19.1
detectron2              0.2.1 @/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 5.4
CUDA compiler           not available
detectron2 arch flags   /cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/_C.cpython-38-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.6.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /opt/common/cuda/cuda-10.0.130/lib64/
Pillow                  7.2.0
torchvision             0.7.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision
torchvision arch flags  /cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20201030
cv2                     4.4.0
----------------------  --------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[10/31 14:08:20] detectron2 INFO: Command line arguments: Namespace(config_file='configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml', dist_url='tcp://127.0.0.1:63010', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.MASK_ON', 'True', 'SOLVER.BASE_LR', '0.015', 'OUTPUT_DIR', 'temp'], resume=False)
[10/31 14:08:20] detectron2 INFO: Contents of args.config_file=configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml:
_BASE_: "../Base-RCNN-FPN.yaml"
MODEL:
  WEIGHTS: "https://download.pytorch.org/models/resnet18-5c106cde.pth"
  MASK_ON: True
  RESNETS:
    DEPTH: 18
    RES2_OUT_CHANNELS: 64
# DATASETS:
#   TRAIN: ("coco_2017_val",)
#   TEST: ("coco_2017_val",) #("coco_2017_test-dev",)
SOLVER:
  BASE_LR: 0.02
  CHECKPOINT_PERIOD: 7330
  # IMS_PER_BATCH: 24
  # STEPS: (40000, 53500)
  # MAX_ITER: 60000
  # WARMUP_FACTOR: 5e-4
  # WARMUP_ITERS: 2000
OUTPUT_DIR: output/faster_r18_fpn

[10/31 14:08:20] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32], [64], [128], [256], [512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 18
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 64
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: 
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://download.pytorch.org/models/resnet18-5c106cde.pth
OUTPUT_DIR: temp
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.015
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 7330
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[10/31 14:08:20] detectron2.utils.env INFO: Using a generated random seed 20372630
[10/31 14:08:20] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten()
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[10/31 14:08:41] detectron2.data.datasets.coco INFO: Loading datasets/coco/annotations/instances_train2017.json takes 20.09 seconds.
[10/31 14:08:42] detectron2.data.datasets.coco INFO: Loaded 118287 images in COCO format from datasets/coco/annotations/instances_train2017.json
[10/31 14:08:49] detectron2.data.build INFO: Removed 1021 images with no usable annotations. 117266 images left.
[10/31 14:08:55] detectron2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 257253       |   bicycle    | 7056         |      car      | 43533        |
|  motorcycle   | 8654         |   airplane   | 5129         |      bus      | 6061         |
|     train     | 4570         |    truck     | 9970         |     boat      | 10576        |
| traffic light | 12842        | fire hydrant | 1865         |   stop sign   | 1983         |
| parking meter | 1283         |    bench     | 9820         |     bird      | 10542        |
|      cat      | 4766         |     dog      | 5500         |     horse     | 6567         |
|     sheep     | 9223         |     cow      | 8014         |   elephant    | 5484         |
|     bear      | 1294         |    zebra     | 5269         |    giraffe    | 5128         |
|   backpack    | 8714         |   umbrella   | 11265        |    handbag    | 12342        |
|      tie      | 6448         |   suitcase   | 6112         |    frisbee    | 2681         |
|     skis      | 6623         |  snowboard   | 2681         |  sports ball  | 6299         |
|     kite      | 8802         | baseball bat | 3273         | baseball gl.. | 3747         |
|  skateboard   | 5536         |  surfboard   | 6095         | tennis racket | 4807         |
|    bottle     | 24070        |  wine glass  | 7839         |      cup      | 20574        |
|     fork      | 5474         |    knife     | 7760         |     spoon     | 6159         |
|     bowl      | 14323        |    banana    | 9195         |     apple     | 5776         |
|   sandwich    | 4356         |    orange    | 6302         |   broccoli    | 7261         |
|    carrot     | 7758         |   hot dog    | 2884         |     pizza     | 5807         |
|     donut     | 7005         |     cake     | 6296         |     chair     | 38073        |
|     couch     | 5779         | potted plant | 8631         |      bed      | 4192         |
| dining table  | 15695        |    toilet    | 4149         |      tv       | 5803         |
|    laptop     | 4960         |    mouse     | 2261         |    remote     | 5700         |
|   keyboard    | 2854         |  cell phone  | 6422         |   microwave   | 1672         |
|     oven      | 3334         |   toaster    | 225          |     sink      | 5609         |
| refrigerator  | 2634         |     book     | 24077        |     clock     | 6320         |
|     vase      | 6577         |   scissors   | 1464         |  teddy bear   | 4729         |
|  hair drier   | 198          |  toothbrush  | 1945         |               |              |
|     total     | 849949       |              |              |               |              |[0m
[10/31 14:08:55] detectron2.data.common INFO: Serializing 117266 elements to byte tensors and concatenating them all ...
[10/31 14:08:59] detectron2.data.common INFO: Serialized dataset takes 451.21 MiB
[10/31 14:08:59] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[10/31 14:08:59] detectron2.data.build INFO: Using training sampler TrainingSampler
[10/31 14:09:02] fvcore.common.checkpoint INFO: Loading checkpoint from https://download.pytorch.org/models/resnet18-5c106cde.pth
[10/31 14:09:02] fvcore.common.file_io INFO: URL https://download.pytorch.org/models/resnet18-5c106cde.pth cached in /cfarhomes/shishira/.torch/fvcore_cache/models/resnet18-5c106cde.pth
[10/31 14:09:02] fvcore.common.checkpoint INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mroi_heads.mask_head.mask_fcn2.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.fpn_output2.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv2.weight[0m
  [34mbackbone.bottom_up.res2.0.conv2.norm.{bias, weight}[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{1, 3, 0, 4, 2}[0m
  [34mroi_heads.box_head.fc2.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn4.{bias, weight}[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.conv2.weight[0m
  [34mbackbone.fpn_output4.{bias, weight}[0m
  [34mbackbone.fpn_lateral2.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv1.norm.{bias, weight}[0m
  [34mroi_heads.box_predictor.cls_score.{weight, bias}[0m
  [34mbackbone.fpn_output5.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv1.weight[0m
  [34mbackbone.bottom_up.res5.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res3.0.shortcut.norm.{bias, weight}[0m
  [34mroi_heads.mask_head.deconv.{weight, bias}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv1.weight[0m
  [34mbackbone.bottom_up.res5.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv2.weight[0m
  [34mbackbone.bottom_up.res2.0.conv1.weight[0m
  [34mroi_heads.mask_head.mask_fcn1.{weight, bias}[0m
  [34mbackbone.fpn_output3.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv1.weight[0m
  [34mbackbone.fpn_lateral4.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn3.{bias, weight}[0m
  [34mbackbone.fpn_lateral3.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv2.weight[0m
  [34mbackbone.bottom_up.res4.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.shortcut.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.fpn_lateral5.{bias, weight}[0m
  [34mroi_heads.box_head.fc1.{bias, weight}[0m
  [34mbackbone.bottom_up.stem.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv1.weight[0m
  [34mroi_heads.box_predictor.bbox_pred.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv2.norm.{weight, bias}[0m
  [34mproposal_generator.rpn_head.conv.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.1.conv1.weight[0m
  [34mbackbone.bottom_up.res4.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.1.conv2.weight[0m
  [34mbackbone.bottom_up.res5.0.shortcut.norm.{weight, bias}[0m
  [34mroi_heads.mask_head.predictor.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.stem.conv1.weight[0m
  [34mbackbone.bottom_up.res5.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res4.1.conv2.weight[0m
  [34mbackbone.bottom_up.res2.0.conv2.weight[0m
  [34mbackbone.bottom_up.res4.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv2.weight[0m
  [34mbackbone.bottom_up.res3.0.conv1.weight[0m
  [34mbackbone.bottom_up.res3.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res2.1.conv1.weight[0m
[10/31 14:09:02] fvcore.common.checkpoint INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mconv1.weight[0m
  [35mbn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv1.weight[0m
  [35mlayer1.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv2.weight[0m
  [35mlayer1.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv1.weight[0m
  [35mlayer1.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv2.weight[0m
  [35mlayer1.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv1.weight[0m
  [35mlayer2.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv2.weight[0m
  [35mlayer2.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.downsample.0.weight[0m
  [35mlayer2.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv1.weight[0m
  [35mlayer2.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv2.weight[0m
  [35mlayer2.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv1.weight[0m
  [35mlayer3.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv2.weight[0m
  [35mlayer3.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.downsample.0.weight[0m
  [35mlayer3.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv1.weight[0m
  [35mlayer3.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv2.weight[0m
  [35mlayer3.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv1.weight[0m
  [35mlayer4.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv2.weight[0m
  [35mlayer4.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.downsample.0.weight[0m
  [35mlayer4.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv1.weight[0m
  [35mlayer4.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv2.weight[0m
  [35mlayer4.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mfc.{weight, bias}[0m
[10/31 14:20:58] detectron2 INFO: Rank of current process: 1. World size: 2
[10/31 14:21:00] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.3 (default, May 19 2020, 18:47:26) [GCC 7.3.0]
numpy                   1.19.1
detectron2              0.2.1 @/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 5.4
CUDA compiler           not available
detectron2 arch flags   /cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/_C.cpython-38-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.6.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /opt/common/cuda/cuda-10.0.130/lib64/
Pillow                  7.2.0
torchvision             0.7.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision
torchvision arch flags  /cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20201030
cv2                     4.4.0
----------------------  --------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[10/31 14:21:00] detectron2 INFO: Command line arguments: Namespace(config_file='configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml', dist_url='tcp://127.0.0.1:63010', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.MASK_ON', 'True', 'SOLVER.BASE_LR', '0.015', 'OUTPUT_DIR', 'temp'], resume=False)
[10/31 14:21:00] detectron2 INFO: Contents of args.config_file=configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml:
_BASE_: "../Base-RCNN-FPN.yaml"
MODEL:
  WEIGHTS: "https://download.pytorch.org/models/resnet18-5c106cde.pth"
  MASK_ON: True
  RESNETS:
    DEPTH: 18
    RES2_OUT_CHANNELS: 64
# DATASETS:
#   TRAIN: ("coco_2017_val",)
#   TEST: ("coco_2017_val",) #("coco_2017_test-dev",)
SOLVER:
  BASE_LR: 0.02
  CHECKPOINT_PERIOD: 7330
  # IMS_PER_BATCH: 24
  # STEPS: (40000, 53500)
  # MAX_ITER: 60000
  # WARMUP_FACTOR: 5e-4
  # WARMUP_ITERS: 2000
OUTPUT_DIR: output/faster_r18_fpn

[10/31 14:21:00] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32], [64], [128], [256], [512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 18
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 64
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: 
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://download.pytorch.org/models/resnet18-5c106cde.pth
OUTPUT_DIR: temp
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.015
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 7330
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[10/31 14:21:00] detectron2.utils.env INFO: Using a generated random seed 769463
[10/31 14:21:01] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten()
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[10/31 14:21:25] detectron2.data.datasets.coco INFO: Loading datasets/coco/annotations/instances_train2017.json takes 24.25 seconds.
[10/31 14:21:26] detectron2.data.datasets.coco INFO: Loaded 118287 images in COCO format from datasets/coco/annotations/instances_train2017.json
[10/31 14:21:34] detectron2.data.build INFO: Removed 1021 images with no usable annotations. 117266 images left.
[10/31 14:21:40] detectron2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 257253       |   bicycle    | 7056         |      car      | 43533        |
|  motorcycle   | 8654         |   airplane   | 5129         |      bus      | 6061         |
|     train     | 4570         |    truck     | 9970         |     boat      | 10576        |
| traffic light | 12842        | fire hydrant | 1865         |   stop sign   | 1983         |
| parking meter | 1283         |    bench     | 9820         |     bird      | 10542        |
|      cat      | 4766         |     dog      | 5500         |     horse     | 6567         |
|     sheep     | 9223         |     cow      | 8014         |   elephant    | 5484         |
|     bear      | 1294         |    zebra     | 5269         |    giraffe    | 5128         |
|   backpack    | 8714         |   umbrella   | 11265        |    handbag    | 12342        |
|      tie      | 6448         |   suitcase   | 6112         |    frisbee    | 2681         |
|     skis      | 6623         |  snowboard   | 2681         |  sports ball  | 6299         |
|     kite      | 8802         | baseball bat | 3273         | baseball gl.. | 3747         |
|  skateboard   | 5536         |  surfboard   | 6095         | tennis racket | 4807         |
|    bottle     | 24070        |  wine glass  | 7839         |      cup      | 20574        |
|     fork      | 5474         |    knife     | 7760         |     spoon     | 6159         |
|     bowl      | 14323        |    banana    | 9195         |     apple     | 5776         |
|   sandwich    | 4356         |    orange    | 6302         |   broccoli    | 7261         |
|    carrot     | 7758         |   hot dog    | 2884         |     pizza     | 5807         |
|     donut     | 7005         |     cake     | 6296         |     chair     | 38073        |
|     couch     | 5779         | potted plant | 8631         |      bed      | 4192         |
| dining table  | 15695        |    toilet    | 4149         |      tv       | 5803         |
|    laptop     | 4960         |    mouse     | 2261         |    remote     | 5700         |
|   keyboard    | 2854         |  cell phone  | 6422         |   microwave   | 1672         |
|     oven      | 3334         |   toaster    | 225          |     sink      | 5609         |
| refrigerator  | 2634         |     book     | 24077        |     clock     | 6320         |
|     vase      | 6577         |   scissors   | 1464         |  teddy bear   | 4729         |
|  hair drier   | 198          |  toothbrush  | 1945         |               |              |
|     total     | 849949       |              |              |               |              |[0m
[10/31 14:21:40] detectron2.data.common INFO: Serializing 117266 elements to byte tensors and concatenating them all ...
[10/31 14:21:44] detectron2.data.common INFO: Serialized dataset takes 451.21 MiB
[10/31 14:21:44] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[10/31 14:21:44] detectron2.data.build INFO: Using training sampler TrainingSampler
[10/31 14:21:47] fvcore.common.checkpoint INFO: Loading checkpoint from https://download.pytorch.org/models/resnet18-5c106cde.pth
[10/31 14:21:47] fvcore.common.file_io INFO: URL https://download.pytorch.org/models/resnet18-5c106cde.pth cached in /cfarhomes/shishira/.torch/fvcore_cache/models/resnet18-5c106cde.pth
[10/31 14:21:47] fvcore.common.checkpoint INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mbackbone.bottom_up.res3.0.conv1.norm.{bias, weight}[0m
  [34mroi_heads.box_head.fc1.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.fpn_output5.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.fpn_lateral2.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv2.weight[0m
  [34mroi_heads.mask_head.deconv.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv2.weight[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{0, 1, 2, 3, 4}[0m
  [34mbackbone.fpn_lateral4.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn1.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv1.weight[0m
  [34mroi_heads.mask_head.mask_fcn4.{bias, weight}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{weight, bias}[0m
  [34mbackbone.fpn_output4.{weight, bias}[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn3.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn2.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv2.weight[0m
  [34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv1.weight[0m
  [34mbackbone.bottom_up.stem.conv1.weight[0m
  [34mbackbone.bottom_up.res3.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res3.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.fpn_lateral3.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv2.weight[0m
  [34mbackbone.bottom_up.res4.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.1.conv1.weight[0m
  [34mbackbone.bottom_up.stem.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.weight[0m
  [34mroi_heads.box_head.fc2.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv1.weight[0m
  [34mbackbone.bottom_up.res3.0.conv2.norm.{weight, bias}[0m
  [34mproposal_generator.rpn_head.conv.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.1.conv1.norm.{bias, weight}[0m
  [34mroi_heads.mask_head.predictor.{weight, bias}[0m
  [34mbackbone.fpn_lateral5.{bias, weight}[0m
  [34mbackbone.fpn_output3.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv2.weight[0m
  [34mbackbone.bottom_up.res2.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.shortcut.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv2.weight[0m
  [34mbackbone.fpn_output2.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv2.weight[0m
  [34mbackbone.bottom_up.res4.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.norm.{bias, weight}[0m
  [34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.conv1.weight[0m
  [34mbackbone.bottom_up.res5.0.conv1.weight[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv1.weight[0m
  [34mbackbone.bottom_up.res4.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res3.1.conv1.weight[0m
  [34mbackbone.bottom_up.res2.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv2.weight[0m
[10/31 14:21:47] fvcore.common.checkpoint INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mconv1.weight[0m
  [35mbn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv1.weight[0m
  [35mlayer1.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv2.weight[0m
  [35mlayer1.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv1.weight[0m
  [35mlayer1.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv2.weight[0m
  [35mlayer1.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv1.weight[0m
  [35mlayer2.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv2.weight[0m
  [35mlayer2.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.downsample.0.weight[0m
  [35mlayer2.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv1.weight[0m
  [35mlayer2.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv2.weight[0m
  [35mlayer2.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv1.weight[0m
  [35mlayer3.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv2.weight[0m
  [35mlayer3.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.downsample.0.weight[0m
  [35mlayer3.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv1.weight[0m
  [35mlayer3.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv2.weight[0m
  [35mlayer3.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv1.weight[0m
  [35mlayer4.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv2.weight[0m
  [35mlayer4.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.downsample.0.weight[0m
  [35mlayer4.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv1.weight[0m
  [35mlayer4.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv2.weight[0m
  [35mlayer4.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mfc.{weight, bias}[0m
[10/31 14:21:48] detectron2.engine.train_loop INFO: Starting training from iteration 0
[10/31 14:21:52] detectron2.engine.hooks INFO: Total training time: 0:00:03 (0:00:00 on hooks)
[10/31 14:25:25] detectron2 INFO: Rank of current process: 1. World size: 2
[10/31 14:25:26] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.3 (default, May 19 2020, 18:47:26) [GCC 7.3.0]
numpy                   1.19.1
detectron2              0.2.1 @/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 5.4
CUDA compiler           not available
detectron2 arch flags   /cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/_C.cpython-38-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.6.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /opt/common/cuda/cuda-10.0.130/lib64/
Pillow                  7.2.0
torchvision             0.7.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision
torchvision arch flags  /cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20201030
cv2                     4.4.0
----------------------  --------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[10/31 14:25:26] detectron2 INFO: Command line arguments: Namespace(config_file='configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml', dist_url='tcp://127.0.0.1:63010', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.MASK_ON', 'True', 'SOLVER.BASE_LR', '0.015', 'OUTPUT_DIR', 'temp'], resume=False)
[10/31 14:25:26] detectron2 INFO: Contents of args.config_file=configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml:
_BASE_: "../Base-RCNN-FPN.yaml"
MODEL:
  WEIGHTS: "https://download.pytorch.org/models/resnet18-5c106cde.pth"
  MASK_ON: True
  RESNETS:
    DEPTH: 18
    RES2_OUT_CHANNELS: 64
# DATASETS:
#   TRAIN: ("coco_2017_val",)
#   TEST: ("coco_2017_val",) #("coco_2017_test-dev",)
SOLVER:
  BASE_LR: 0.02
  CHECKPOINT_PERIOD: 7330
  # IMS_PER_BATCH: 24
  # STEPS: (40000, 53500)
  # MAX_ITER: 60000
  # WARMUP_FACTOR: 5e-4
  # WARMUP_ITERS: 2000
OUTPUT_DIR: output/faster_r18_fpn

[10/31 14:25:26] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32], [64], [128], [256], [512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 18
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 64
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: 
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://download.pytorch.org/models/resnet18-5c106cde.pth
OUTPUT_DIR: temp
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.015
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 7330
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[10/31 14:25:26] detectron2.utils.env INFO: Using a generated random seed 26534481
[10/31 14:25:27] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten()
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[10/31 14:25:47] detectron2.data.datasets.coco INFO: Loading datasets/coco/annotations/instances_train2017.json takes 19.89 seconds.
[10/31 14:25:48] detectron2.data.datasets.coco INFO: Loaded 118287 images in COCO format from datasets/coco/annotations/instances_train2017.json
[10/31 14:25:55] detectron2.data.build INFO: Removed 1021 images with no usable annotations. 117266 images left.
[10/31 14:26:01] detectron2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 257253       |   bicycle    | 7056         |      car      | 43533        |
|  motorcycle   | 8654         |   airplane   | 5129         |      bus      | 6061         |
|     train     | 4570         |    truck     | 9970         |     boat      | 10576        |
| traffic light | 12842        | fire hydrant | 1865         |   stop sign   | 1983         |
| parking meter | 1283         |    bench     | 9820         |     bird      | 10542        |
|      cat      | 4766         |     dog      | 5500         |     horse     | 6567         |
|     sheep     | 9223         |     cow      | 8014         |   elephant    | 5484         |
|     bear      | 1294         |    zebra     | 5269         |    giraffe    | 5128         |
|   backpack    | 8714         |   umbrella   | 11265        |    handbag    | 12342        |
|      tie      | 6448         |   suitcase   | 6112         |    frisbee    | 2681         |
|     skis      | 6623         |  snowboard   | 2681         |  sports ball  | 6299         |
|     kite      | 8802         | baseball bat | 3273         | baseball gl.. | 3747         |
|  skateboard   | 5536         |  surfboard   | 6095         | tennis racket | 4807         |
|    bottle     | 24070        |  wine glass  | 7839         |      cup      | 20574        |
|     fork      | 5474         |    knife     | 7760         |     spoon     | 6159         |
|     bowl      | 14323        |    banana    | 9195         |     apple     | 5776         |
|   sandwich    | 4356         |    orange    | 6302         |   broccoli    | 7261         |
|    carrot     | 7758         |   hot dog    | 2884         |     pizza     | 5807         |
|     donut     | 7005         |     cake     | 6296         |     chair     | 38073        |
|     couch     | 5779         | potted plant | 8631         |      bed      | 4192         |
| dining table  | 15695        |    toilet    | 4149         |      tv       | 5803         |
|    laptop     | 4960         |    mouse     | 2261         |    remote     | 5700         |
|   keyboard    | 2854         |  cell phone  | 6422         |   microwave   | 1672         |
|     oven      | 3334         |   toaster    | 225          |     sink      | 5609         |
| refrigerator  | 2634         |     book     | 24077        |     clock     | 6320         |
|     vase      | 6577         |   scissors   | 1464         |  teddy bear   | 4729         |
|  hair drier   | 198          |  toothbrush  | 1945         |               |              |
|     total     | 849949       |              |              |               |              |[0m
[10/31 14:26:01] detectron2.data.common INFO: Serializing 117266 elements to byte tensors and concatenating them all ...
[10/31 14:26:05] detectron2.data.common INFO: Serialized dataset takes 451.21 MiB
[10/31 14:26:05] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[10/31 14:26:05] detectron2.data.build INFO: Using training sampler TrainingSampler
[10/31 14:26:09] fvcore.common.checkpoint INFO: Loading checkpoint from https://download.pytorch.org/models/resnet18-5c106cde.pth
[10/31 14:26:09] fvcore.common.file_io INFO: URL https://download.pytorch.org/models/resnet18-5c106cde.pth cached in /cfarhomes/shishira/.torch/fvcore_cache/models/resnet18-5c106cde.pth
[10/31 14:26:09] fvcore.common.checkpoint INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mbackbone.bottom_up.res2.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv2.weight[0m
  [34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
  [34mroi_heads.mask_head.predictor.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.norm.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn2.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.1.conv2.weight[0m
  [34mbackbone.bottom_up.res5.1.conv1.weight[0m
  [34mbackbone.fpn_output5.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv2.weight[0m
  [34mbackbone.bottom_up.res4.1.conv1.weight[0m
  [34mproposal_generator.rpn_head.conv.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.fpn_lateral4.{weight, bias}[0m
  [34mroi_heads.mask_head.deconv.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.fpn_output3.{weight, bias}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv1.weight[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{4, 3, 0, 2, 1}[0m
  [34mbackbone.bottom_up.res5.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv2.weight[0m
  [34mbackbone.bottom_up.res4.0.conv1.weight[0m
  [34mbackbone.fpn_output2.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.conv1.norm.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn3.{weight, bias}[0m
  [34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.fpn_lateral3.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.stem.conv1.norm.{bias, weight}[0m
  [34mbackbone.fpn_lateral2.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res3.0.conv1.weight[0m
  [34mbackbone.bottom_up.res5.1.conv2.weight[0m
  [34mbackbone.fpn_lateral5.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv1.weight[0m
  [34mbackbone.bottom_up.res4.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.fpn_output4.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res2.1.conv2.norm.{bias, weight}[0m
  [34mroi_heads.box_head.fc2.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv2.weight[0m
  [34mroi_heads.box_head.fc1.{bias, weight}[0m
  [34mroi_heads.mask_head.mask_fcn4.{weight, bias}[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.0.shortcut.norm.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn1.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv2.weight[0m
  [34mbackbone.bottom_up.res2.1.conv1.weight[0m
  [34mbackbone.bottom_up.res3.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res3.1.conv2.weight[0m
  [34mbackbone.bottom_up.stem.conv1.weight[0m
  [34mbackbone.bottom_up.res5.0.conv1.weight[0m
[10/31 14:26:09] fvcore.common.checkpoint INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mconv1.weight[0m
  [35mbn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv1.weight[0m
  [35mlayer1.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv2.weight[0m
  [35mlayer1.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv1.weight[0m
  [35mlayer1.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv2.weight[0m
  [35mlayer1.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv1.weight[0m
  [35mlayer2.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv2.weight[0m
  [35mlayer2.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.downsample.0.weight[0m
  [35mlayer2.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv1.weight[0m
  [35mlayer2.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv2.weight[0m
  [35mlayer2.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv1.weight[0m
  [35mlayer3.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv2.weight[0m
  [35mlayer3.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.downsample.0.weight[0m
  [35mlayer3.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv1.weight[0m
  [35mlayer3.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv2.weight[0m
  [35mlayer3.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv1.weight[0m
  [35mlayer4.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv2.weight[0m
  [35mlayer4.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.downsample.0.weight[0m
  [35mlayer4.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv1.weight[0m
  [35mlayer4.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv2.weight[0m
  [35mlayer4.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mfc.{weight, bias}[0m
[10/31 14:26:11] detectron2.engine.train_loop INFO: Starting training from iteration 0
[10/31 14:49:38] detectron2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 134, in train
    self.run_step()
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 423, in run_step
    self._trainer.run_step()
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 228, in run_step
    loss_dict = self.model(data)
  File "/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 511, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/modeling/meta_arch/rcnn.py", line 160, in forward
    proposals, proposal_losses = self.proposal_generator(images, features, gt_instances)
  File "/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/modeling/proposal_generator/rpn.py", line 448, in forward
    proposals = self.predict_proposals(
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/modeling/proposal_generator/rpn.py", line 474, in predict_proposals
    return find_top_rpn_proposals(
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/modeling/proposal_generator/proposal_utils.py", line 91, in find_top_rpn_proposals
    raise FloatingPointError(
FloatingPointError: Predicted boxes or scores contain Inf/NaN. Training has diverged.
[10/31 14:49:38] detectron2.engine.hooks INFO: Overall training speed: 1113 iterations in 0:23:08 (1.2473 s / it)
[10/31 14:49:38] detectron2.engine.hooks INFO: Total training time: 0:23:08 (0:00:00 on hooks)
[10/31 15:52:04] detectron2 INFO: Rank of current process: 1. World size: 2
[10/31 15:52:06] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.3 (default, May 19 2020, 18:47:26) [GCC 7.3.0]
numpy                   1.19.1
detectron2              0.2.1 @/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 5.4
CUDA compiler           not available
detectron2 arch flags   /cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/_C.cpython-38-x86_64-linux-gnu.so; cannot find cuobjdump
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.6.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1                 GeForce GTX 1080 Ti (arch=6.1)
CUDA_HOME               /opt/common/cuda/cuda-10.0.130/lib64/
Pillow                  7.2.0
torchvision             0.7.0 @/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision
torchvision arch flags  /cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torchvision/_C.so; cannot find cuobjdump
fvcore                  0.1.2.post20201030
cv2                     4.4.0
----------------------  --------------------------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[10/31 15:52:06] detectron2 INFO: Command line arguments: Namespace(config_file='configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml', dist_url='tcp://127.0.0.1:63010', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.MASK_ON', 'True', 'SOLVER.BASE_LR', '0.015', 'OUTPUT_DIR', 'temp'], resume=False)
[10/31 15:52:06] detectron2 INFO: Contents of args.config_file=configs/COCO-InstanceSegmentation/mask_rcnn_r18_FPN_1x.yaml:
_BASE_: "../Base-RCNN-FPN.yaml"
MODEL:
  WEIGHTS: "https://download.pytorch.org/models/resnet18-5c106cde.pth"
  MASK_ON: True
  RESNETS:
    DEPTH: 18
    RES2_OUT_CHANNELS: 64
# DATASETS:
#   TRAIN: ("coco_2017_val",)
#   TEST: ("coco_2017_val",) #("coco_2017_test-dev",)
SOLVER:
  BASE_LR: 0.02
  CHECKPOINT_PERIOD: 7330
  # IMS_PER_BATCH: 24
  # STEPS: (40000, 53500)
  # MAX_ITER: 60000
  # WARMUP_FACTOR: 5e-4
  # WARMUP_ITERS: 2000
OUTPUT_DIR: output/faster_r18_fpn

[10/31 15:52:06] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32], [64], [128], [256], [512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res2', 'res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 18
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res2', 'res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 64
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: FastRCNNConvFCHead
    NORM: 
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5', 'p6']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: https://download.pytorch.org/models/resnet18-5c106cde.pth
OUTPUT_DIR: temp
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.015
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 7330
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[10/31 15:52:06] detectron2.utils.env INFO: Using a generated random seed 6625177
[10/31 15:52:07] detectron2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BasicBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten()
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[10/31 15:52:29] detectron2.data.datasets.coco INFO: Loading datasets/coco/annotations/instances_train2017.json takes 22.53 seconds.
[10/31 15:52:30] detectron2.data.datasets.coco INFO: Loaded 118287 images in COCO format from datasets/coco/annotations/instances_train2017.json
[10/31 15:52:38] detectron2.data.build INFO: Removed 1021 images with no usable annotations. 117266 images left.
[10/31 15:52:44] detectron2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 257253       |   bicycle    | 7056         |      car      | 43533        |
|  motorcycle   | 8654         |   airplane   | 5129         |      bus      | 6061         |
|     train     | 4570         |    truck     | 9970         |     boat      | 10576        |
| traffic light | 12842        | fire hydrant | 1865         |   stop sign   | 1983         |
| parking meter | 1283         |    bench     | 9820         |     bird      | 10542        |
|      cat      | 4766         |     dog      | 5500         |     horse     | 6567         |
|     sheep     | 9223         |     cow      | 8014         |   elephant    | 5484         |
|     bear      | 1294         |    zebra     | 5269         |    giraffe    | 5128         |
|   backpack    | 8714         |   umbrella   | 11265        |    handbag    | 12342        |
|      tie      | 6448         |   suitcase   | 6112         |    frisbee    | 2681         |
|     skis      | 6623         |  snowboard   | 2681         |  sports ball  | 6299         |
|     kite      | 8802         | baseball bat | 3273         | baseball gl.. | 3747         |
|  skateboard   | 5536         |  surfboard   | 6095         | tennis racket | 4807         |
|    bottle     | 24070        |  wine glass  | 7839         |      cup      | 20574        |
|     fork      | 5474         |    knife     | 7760         |     spoon     | 6159         |
|     bowl      | 14323        |    banana    | 9195         |     apple     | 5776         |
|   sandwich    | 4356         |    orange    | 6302         |   broccoli    | 7261         |
|    carrot     | 7758         |   hot dog    | 2884         |     pizza     | 5807         |
|     donut     | 7005         |     cake     | 6296         |     chair     | 38073        |
|     couch     | 5779         | potted plant | 8631         |      bed      | 4192         |
| dining table  | 15695        |    toilet    | 4149         |      tv       | 5803         |
|    laptop     | 4960         |    mouse     | 2261         |    remote     | 5700         |
|   keyboard    | 2854         |  cell phone  | 6422         |   microwave   | 1672         |
|     oven      | 3334         |   toaster    | 225          |     sink      | 5609         |
| refrigerator  | 2634         |     book     | 24077        |     clock     | 6320         |
|     vase      | 6577         |   scissors   | 1464         |  teddy bear   | 4729         |
|  hair drier   | 198          |  toothbrush  | 1945         |               |              |
|     total     | 849949       |              |              |               |              |[0m
[10/31 15:52:44] detectron2.data.common INFO: Serializing 117266 elements to byte tensors and concatenating them all ...
[10/31 15:52:48] detectron2.data.common INFO: Serialized dataset takes 451.21 MiB
[10/31 15:52:48] detectron2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[10/31 15:52:48] detectron2.data.build INFO: Using training sampler TrainingSampler
[10/31 15:52:51] fvcore.common.checkpoint INFO: Loading checkpoint from https://download.pytorch.org/models/resnet18-5c106cde.pth
[10/31 15:52:51] fvcore.common.file_io INFO: URL https://download.pytorch.org/models/resnet18-5c106cde.pth cached in /cfarhomes/shishira/.torch/fvcore_cache/models/resnet18-5c106cde.pth
[10/31 15:52:51] fvcore.common.checkpoint INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mbackbone.bottom_up.res5.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.1.conv1.norm.{bias, weight}[0m
  [34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
  [34mroi_heads.box_predictor.cls_score.{weight, bias}[0m
  [34mbackbone.fpn_lateral4.{weight, bias}[0m
  [34mbackbone.bottom_up.stem.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.fpn_lateral2.{bias, weight}[0m
  [34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res5.1.conv1.weight[0m
  [34mbackbone.bottom_up.res3.1.conv1.weight[0m
  [34mbackbone.bottom_up.stem.conv1.weight[0m
  [34mbackbone.bottom_up.res2.0.conv2.weight[0m
  [34mbackbone.bottom_up.res4.1.conv2.weight[0m
  [34mbackbone.bottom_up.res3.0.conv1.weight[0m
  [34mbackbone.bottom_up.res5.0.conv1.norm.{weight, bias}[0m
  [34mproposal_generator.anchor_generator.cell_anchors.{2, 3, 4, 1, 0}[0m
  [34mbackbone.fpn_output5.{bias, weight}[0m
  [34mbackbone.fpn_output4.{weight, bias}[0m
  [34mbackbone.bottom_up.res4.1.conv1.weight[0m
  [34mbackbone.bottom_up.res5.1.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv1.norm.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn1.{bias, weight}[0m
  [34mbackbone.fpn_lateral3.{weight, bias}[0m
  [34mroi_heads.box_head.fc1.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv2.norm.{weight, bias}[0m
  [34mroi_heads.mask_head.deconv.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.1.conv2.weight[0m
  [34mbackbone.bottom_up.res2.0.conv1.weight[0m
  [34mbackbone.bottom_up.res4.0.conv1.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res3.0.conv1.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv1.weight[0m
  [34mbackbone.fpn_lateral5.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.conv2.weight[0m
  [34mbackbone.bottom_up.res5.1.conv2.norm.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv1.norm.{weight, bias}[0m
  [34mroi_heads.mask_head.mask_fcn2.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.shortcut.norm.{weight, bias}[0m
  [34mproposal_generator.rpn_head.conv.{weight, bias}[0m
  [34mbackbone.bottom_up.res2.1.conv2.weight[0m
  [34mroi_heads.mask_head.mask_fcn4.{weight, bias}[0m
  [34mbackbone.bottom_up.res3.0.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.conv2.weight[0m
  [34mbackbone.bottom_up.res4.1.conv2.norm.{bias, weight}[0m
  [34mbackbone.bottom_up.res2.1.conv1.weight[0m
  [34mbackbone.fpn_output2.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.conv1.weight[0m
  [34mroi_heads.mask_head.mask_fcn3.{bias, weight}[0m
  [34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
  [34mbackbone.bottom_up.res4.0.shortcut.norm.{bias, weight}[0m
  [34mbackbone.fpn_output3.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.shortcut.weight[0m
  [34mbackbone.bottom_up.res4.0.shortcut.weight[0m
  [34mroi_heads.box_head.fc2.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.1.conv2.weight[0m
  [34mroi_heads.mask_head.predictor.{weight, bias}[0m
  [34mbackbone.bottom_up.res5.0.conv2.weight[0m
[10/31 15:52:51] fvcore.common.checkpoint INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mconv1.weight[0m
  [35mbn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv1.weight[0m
  [35mlayer1.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.0.conv2.weight[0m
  [35mlayer1.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv1.weight[0m
  [35mlayer1.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer1.1.conv2.weight[0m
  [35mlayer1.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv1.weight[0m
  [35mlayer2.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.conv2.weight[0m
  [35mlayer2.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.0.downsample.0.weight[0m
  [35mlayer2.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv1.weight[0m
  [35mlayer2.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer2.1.conv2.weight[0m
  [35mlayer2.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv1.weight[0m
  [35mlayer3.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.conv2.weight[0m
  [35mlayer3.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.0.downsample.0.weight[0m
  [35mlayer3.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv1.weight[0m
  [35mlayer3.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer3.1.conv2.weight[0m
  [35mlayer3.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv1.weight[0m
  [35mlayer4.0.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.conv2.weight[0m
  [35mlayer4.0.bn2.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.0.downsample.0.weight[0m
  [35mlayer4.0.downsample.1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv1.weight[0m
  [35mlayer4.1.bn1.{running_mean, running_var, weight, bias}[0m
  [35mlayer4.1.conv2.weight[0m
  [35mlayer4.1.bn2.{running_mean, running_var, weight, bias}[0m
  [35mfc.{weight, bias}[0m
[10/31 15:52:54] detectron2.engine.train_loop INFO: Starting training from iteration 0
[10/31 16:13:52] detectron2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 134, in train
    self.run_step()
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 423, in run_step
    self._trainer.run_step()
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 228, in run_step
    loss_dict = self.model(data)
  File "/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 511, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/modeling/meta_arch/rcnn.py", line 160, in forward
    proposals, proposal_losses = self.proposal_generator(images, features, gt_instances)
  File "/cfarhomes/shishira/miniconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/modeling/proposal_generator/rpn.py", line 448, in forward
    proposals = self.predict_proposals(
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/modeling/proposal_generator/rpn.py", line 474, in predict_proposals
    return find_top_rpn_proposals(
  File "/cfarhomes/shishira/.local/lib/python3.8/site-packages/detectron2/modeling/proposal_generator/proposal_utils.py", line 91, in find_top_rpn_proposals
    raise FloatingPointError(
FloatingPointError: Predicted boxes or scores contain Inf/NaN. Training has diverged.
[10/31 16:13:52] detectron2.engine.hooks INFO: Overall training speed: 795 iterations in 0:20:37 (1.5562 s / it)
[10/31 16:13:52] detectron2.engine.hooks INFO: Total training time: 0:20:37 (0:00:00 on hooks)
